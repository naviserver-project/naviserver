[include version_include.man]
[manpage_begin ns_perm n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Add users, groups, and permissions}]

[description]

[cmd ns_perm] implements a command set for simple password and group
management for NaviServer.

[section {COMMANDS}]

[list_begin definitions]

[call [cmd "ns_perm adduser"] \
	[opt [option -allow]] \
	[opt [option -deny]] \
	[opt [option -clear]] \
	[opt [option "-salt [arg value]"]] \
        [opt --] \
	[arg name] \
	[arg encpass] \
	[arg userfield] \
	[opt [arg "host ..."]]]

 Adds a new user to the in-memory users database. When a
 [const passwd] file is given, this command is used to load the users
 from this file.
 The user is
 identified by the specified [arg name], and the provided encrypted
 password [arg encpass] and additional user information
 ([arg userfield]) are stored in the database.

[para] If the [option -allow] option is used along with one or more
hostnames, the user is granted access only on the specified hosts.


[para] If the [option -deny] option is used along with hostnames,
access for the user is explicitly denied on those hosts. Hostnames can
be specified as an IP address with netmask (e.g.,
[const 128.2.142.0/255.255.255.0]),
a fully qualified domain name (e.g., [const www.microsoft.com]),
or as a domain pattern (e.g., [const .microsoft.com]).

[example_begin]
 128.2.142.0/255.255.255.0 or www.microsoft.com or .microsoft.com.
[example_end]

[para]
[option -salt]

By default, the password provided in [arg encpass] is assumed to be
already encrypted with the [cmd ns_crypt] command using the salt
[const CU]. When the [option -salt] is specified, the [arg encpass] argument
is treated as clear text and will be encrypted using the specified
salt via [cmd ns_crypt].

[example_begin]
 ns_crypt mypasswd CU
[example_end]

[para]
The [option -clear] indicates that the password should be stored in
clear text rather than encrypted.


[call [cmd "ns_perm deluser"] \
	[arg name]]

Removes the user with the given [arg name] from the users database.

[call [cmd "ns_perm addgroup"] \
	[arg group] \
	[arg user] \
	[opt [arg "user ..."]]]

Creates a new group identified by [arg group] and adds the specified
user(s) ([arg user] and any additional users) to that group.

[call [cmd "ns_perm delgroup"] \
	[arg name]]

Deletes the group identified by [arg name] from the system.

[call [cmd "ns_perm allowuser"] \
	[opt [option -noinherit]] \
        [opt --] \
	[arg method] \
	[arg url] \
	[arg "user ..."] ]

Allows the specified user(s) to access the combination of the HTTP
[arg method] and [arg url]. If [option -noinherit] is specified, only
the exact URL is matched; otherwise, all URLs under the given URL are
permitted.


[call [cmd "ns_perm denyuser"] \
	[opt [option -noinherit]] \
        [opt --] \
	[arg method] \
	[arg url] \
	[arg "user ..."] \
        ]

Denies access for the specified user(s) to the given HTTP [arg method]
and [arg url]. With [option -noinherit], the restriction applies only
to the exact URL; without it, all URLs beneath the given URL are
denied.


[call [cmd "ns_perm allowgroup"] \
	[opt [option -noinherit]] \
        [opt --] \
	[arg method] \
	[arg url] \
	[arg "group ..."]]

Grants access for the specified group(s) to the HTTP [arg method] and
[arg url]. The [option -noinherit] behaves as described above.

[call [cmd "ns_perm denygroup"] \
	[opt [option -noinherit]] \
        [opt --] \
	[arg method] \
	[arg url] \
	[arg "group ..."]]

Denies access for the specified group(s) to the HTTP [arg method] and
[arg url]. When [option -noinherit] is used, only the exact URL is
affected; otherwise, the rule applies recursively to subordinate URLs.

[call [cmd "ns_perm checkpass"] [arg user] [arg passwd]]

Verifies that the given plain-text [arg passwd] is correct for the
user specified by [arg user]. If the password does not match, a Tcl
error is thrown.

[call [cmd "ns_perm setpass"] [arg user] [arg encpass] [opt [arg salt]]]

Updates the password for the user specified by [arg user] to the new
encrypted password [arg encpass]. If a [arg salt] is provided, the
password is expected to be in clear text and will be encrypted using
[cmd ns_crypt] with the given salt.


[call [cmd "ns_perm listusers"]]

Returns a Tcl list of all users in the system. For each user, the list
includes three elements: the username, the encrypted password, and the
user's permissions.

[call [cmd "ns_perm listgroups"]]

Returns a Tcl list of all registered groups. Each group is represented
by its group name followed by a list of its members.

[call [cmd "ns_perm listperms"]]

Returns a Tcl list of all allow/deny rules registered for each URL.

[call [cmd ns_permreload]]

Reloads all nsperm files. Note that on very busy sites this operation
may cause temporary authentication failures, as the in-memory
permissions are cleared before the files are reloaded from disk.

[call [cmd ns_permpasswd] \
	[arg user] \
	[arg oldpasswd] \
	[arg newpasswd]]

Updates the password for an existing user both in the running serverâ€™s
memory and in the persistent [const passwd] file on disk. The [arg user]
parameter specifies the username whose password is to be updated. The
[arg oldpasswd] parameter must be provided in plain text and
represents either the user's current password or the nsadmin
password. The [arg newpasswd] parameter is the new password, also
supplied in plain text.

[list_end]


[section CONFIGURATION]

The following configuration options are available to control
permission module:

[list_begin definitions]

[def htaccess]

This parameter if set to true, enables .htaccess mode, similar to what
the Apache web server has but very simple and limited in
functionality.

[para] On every request the server looks for .htaccess file in the
current request directory and loads it if modified since the last
read. The structure of the file is simple:

[example_begin]
 allow user ...
 deny user ...
[example_end]

[def passwdfile]

This parameter determines in .htaccess mode which file with users and
passwords needs to be checked for modification and reloaded
automatically. If .htaccess mode is not active, the parameter is
ignored.

[list_end]

[example_begin]
 ns_section ns/server/$server/module/nsperm {
   ns_param htaccess   true
   ns_param passwdfile /usr/local/ns/modules/nsperm/passwd
 }
[example_end]


[section EXAMPLES]

[example_begin]
 ns_perm adduser test [lb]ns_crypt testpass ""[rb] TestUser
 ns_perm adduser -salt CU test2 test TestUser2
 
 ns_perm allowuser GET /Documents test test2
[example_end]

[see_also nsd ns_crypt]
[keywords "server built-in" NaviServer nsperm]
[manpage_end]


