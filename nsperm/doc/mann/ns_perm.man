[include version_include.man]
[manpage_begin ns_perm n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Add users, groups, and permissions}]

[description]

[cmd ns_perm] implements a command set for simple password and group
management for NaviServer.

[section {COMMANDS}]

[list_begin definitions]

[call [cmd "ns_perm adduser"] \
	[opt [option -allow]] \
	[opt [option -deny]] \
	[opt [option -clear]] \
	[opt [option "-salt [arg string]"]] \
        [opt --] \
	[arg name] \
	[arg encpass] \
	[arg userfield] \
	[opt [arg "host ..."]]]

Adds the user with the specified name and the
encrypted password [arg encpass] and the specified user text (userfield)
into the users database.

[para]
[option -allow] and hostnames are specified, the user will be allowed on the specified hostnames.

[para]
[option -deny] and hostnames are specified, the user will be denied on the specified hostnames.
The hostname must be specified as ipaddress/netmask or dnshostname.

[example_begin]
 128.2.142.0/255.255.255.0 or www.microsoft.com or .microsoft.com.
[example_end]

[para]
[option -salt]
By default password is assumed encrypted with the [cmd ns_crypt]
command and salt "CU":

[example_begin]
 ns_crypt mypasswd CU
[example_end]

This argument tells command that password is clear text and it should be encrypted
by the [cmd ns_perm] command with specified salt.

[para]
[option -clear]
Tells that we keep password in clear text


[call [cmd "ns_perm deluser"] \
	[arg name]]

Delete user from the memory.


[call [cmd "ns_perm addgroup"] \
	[arg group] \
	[arg user] \
	[opt [arg "user ..."]]]

Create a new [arg group] with the specified name
that includes the users listed after the group name.


[call [cmd "ns_perm delgroup"] \
	[arg name]]

Deletes group from the memory.


[call [cmd "ns_perm allowuser"] \
	[opt [option -noinherit]] \
        [opt --] \
	[arg method] \
	[arg url] \
	[arg "user ..."] ]

Allow the specified user to access the
specified method and URL combination.  If [option -noinherit] is specified,
only access to the exact URL is allowed; otherwise, URLs under that
URL are allowed as well.

[call [cmd "ns_perm denyuser"] \
	[opt [option -noinherit]] \
        [opt --] \
	[arg method] \
	[arg url] \
	[arg "user ..."] \
        ]

Deny the specified user access to the
specified method and URL combination.  If [option -noinherit] is specified,
only access to the exact URL is denied; otherwise, URLs under that URL
are denied as well.

[call [cmd "ns_perm allowgroup"] \
	[opt [option -noinherit]] \
        [opt --] \
	[arg method] \
	[arg url] \
	[arg "group ..."]]

Allow the specified group access to the
specified method and URL combination.  If [option -noinherit] is specified,
only access to the exact URL is allowed; otherwise, URLs under that
URL are allowed as well.

[call [cmd "ns_perm denygroup"] \
	[opt [option -noinherit]] \
        [opt --] \
	[arg method] \
	[arg url] \
	[arg "group ..."]]

Deny the specified [arg group] access to the
specified method and URL combination.  If [option -noinherit] is specified,
only access to the exact URL is denied; otherwise, URLs under that URL
are denied as well.

[call [cmd "ns_perm checkpass"] [arg user] [arg passwd]]

Checks if the specified plain-text
password is correct for the specified user.  A Tcl error is thrown if
it does not match.

[call [cmd "ns_perm setpass"] [arg user] [arg encpass] [opt [arg salt]]]

Updates the specified user's password to the
encrypted password [arg encpass] and the optional provided [arg salt].
The password should be encrypted using [cmd ns_encrypt].

[call [cmd "ns_perm listusers"]]

Returns a Tcl list of all current users in the format username password ....

[call [cmd "ns_perm listgroups"]]

Returns a Tcl list with all registered groups in the format: groupname {user ...} ...

[call [cmd "ns_perm listperms"]]

Returns a Tcl list with all registered allow/deny statements for each URL.


[call [cmd ns_permreload]]

Reloads all nsperm files, on very busy sites there could happen
authentication denies because this command clears the memory first and
then loads files from the disk

[call [cmd ns_permpasswd] \
	[arg user] \
	[arg oldpasswd] \
	[arg newpasswd]]

Updates an existing user's password, both in the running
server's memory as well as in the passwd file on disk. The user is the
name of the user whose password is to be updated. The [arg oldpasswd]
argument is the user's old password, or the nsadmin password, in plain
text. The [arg newpasswd] argument is the new password in plain text.

[list_end]


[section CONFIGURATION]

The following configuration options are available to control
permission module:

[list_begin definitions]

[def htaccess]

This parameter if set to true, enables .htaccess mode, similar to what
the Apache web server has but very simple and limited in
functionality.

[para] On every request the server looks for .htaccess file in the
current request directory and loads it if modified since the last
read. The structure of the file is simple:

[example_begin]
 allow user ...
 deny user ...
[example_end]

[def passwdfile]

This parameter determines in .htaccess mode which file with users and
passwords needs to be checked for modification and reloaded
automatically. If .htaccess mode is not active, the parameter is
ignored.

[list_end]

[example_begin]
 ns_section ns/server/$server/module/nsperm {
   ns_param htaccess   true
   ns_param passwdfile /usr/local/ns/modules/nsperm/passwd
 }
[example_end]


[section EXAMPLES]

[example_begin]
 ns_perm adduser test [lb]ns_crypt testpass ""[rb] TestUser
 ns_perm adduser -salt CU test2 test TestUser2
 
 ns_perm allowuser GET /Documents test test2
[example_end]

[see_also nsd ns_crypt]
[keywords "server built-in" NaviServer nsperm]
[manpage_end]


