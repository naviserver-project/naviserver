# -*- Tcl -*-

package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv


test ns_perm-1.1 {syntax: ns_perm} -body {
    ns_perm
} -returnCodes error -result {wrong # args: should be "ns_perm /subcommand/ ?/args/?"}

test ns_perm-2.1 {syntax: ns_perm adduser} -body {
    ns_perm adduser
} -returnCodes error -result {wrong # args: should be "ns_perm adduser ?-allow? ?-deny? ?-clear? ?-salt /string/? ?--? /name/ /encpass/ /userfield/ ?/host .../?"}

test ns_perm-2.2 {syntax: ns_perm deluser} -body {
    ns_perm deluser
} -returnCodes error -result {wrong # args: should be "ns_perm deluser /name/"}

test ns_perm-2.3 {syntax: ns_perm addgroup} -body {
    ns_perm addgroup
} -returnCodes error -result {wrong # args: should be "ns_perm addgroup /group/ /user/ ?/user .../?"}

test ns_perm-2.4 {syntax: ns_perm delgroup} -body {
    ns_perm delgroup
} -returnCodes error -result {wrong # args: should be "ns_perm delgroup /name/"}

test ns_perm-2.5 {syntax: ns_perm allowuser} -body {
    ns_perm allowuser
} -returnCodes {ok error} -result {wrong # args: should be "ns_perm allowuser ?-noinherit? ?--? /method/ /url/ /user .../"}

test ns_perm-2.6 {syntax: ns_perm denyuser} -body {
    ns_perm denyuser
} -returnCodes error -result {wrong # args: should be "ns_perm denyuser ?-noinherit? ?--? /method/ /url/ /user .../"}

test ns_perm-2.7 {syntax: ns_perm allowgroup} -body {
    ns_perm allowgroup
} -returnCodes error -result {wrong # args: should be "ns_perm allowgroup ?-noinherit? ?--? /method/ /url/ /user .../"}

test ns_perm-2.8 {syntax: ns_perm denygroup} -body {
    ns_perm denygroup
} -returnCodes error -result {wrong # args: should be "ns_perm denygroup ?-noinherit? ?--? /method/ /url/ /user .../"}

test ns_perm-2.9 {syntax: ns_perm checkpass} -body {
    ns_perm checkpass
} -returnCodes error -result {wrong # args: should be "ns_perm checkpass /user/ /pwd/"}

test ns_perm-2.10 {syntax: ns_perm setpass} -body {
    ns_perm setpass
} -returnCodes error -result {wrong # args: should be "ns_perm setpass /user/ /encpass/ ?/salt/?"}

test ns_perm-2.11 {syntax: ns_perm listusers} -body {
    ns_perm listusers ?
} -returnCodes error -result {wrong # args: should be "ns_perm listusers"}

test ns_perm-2.12 {syntax: ns_perm listgroups} -body {
    ns_perm listgroups ?
} -returnCodes error -result {wrong # args: should be "ns_perm listgroups"}

test ns_perm-2.13 {syntax: ns_perm listperms} -body {
    ns_perm listperms ?
} -returnCodes error -result {wrong # args: should be "ns_perm listperms"}

test ns_perm-2.14 {syntax: ns_perm ns_permreload} -body {
    ns_permreload ?
} -returnCodes error -result {wrong # args: should be "ns_permreload"}

test ns_perm-2.15 {syntax: ns_permpasswd} -body {
    ns_permpasswd
} -returnCodes error -result {wrong # args: should be "ns_permpasswd targetuser oldpass newpass"}

# Tcl proc ns_permpasswd: message should be {wrong # args: should be "ns_permpasswd /targetuser/ /oldpass/ /newpass/"}


cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
