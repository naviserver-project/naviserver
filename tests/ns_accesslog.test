# -*- Tcl -*-


package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv



test ns_accesslog-1.0 {basic syntax} -body {
    ns_accesslog
} -returnCodes error -result {wrong # args: should be "ns_accesslog /subcommand/ ?arg ...?"}

test ns_accesslog-1.1 {basic syntax} -body {
    ns_accesslog ?
} -returnCodes error -result {bad subcommand "?": must be rollfmt, maxbackup, maxbuffer, extendedheaders, flags, file, or roll}

test ns_accesslog-1.2 {syntax: ns_accesslog extendedheaders} -body {
    ns_accesslog extendedheaders x y
} -returnCodes error -result {wrong # args: should be "ns_accesslog extendedheaders ?headers?"}

test ns_accesslog-1.3 {syntax: ns_accesslog file} -body {
    ns_accesslog file x y
} -returnCodes error -result {wrong # args: should be "ns_accesslog file ?filepath?"}

test ns_accesslog-1.4 {syntax: ns_accesslog flags} -body {
    ns_accesslog flags x y
} -returnCodes error -result {wrong # args: should be "ns_accesslog flags ?flags?"}

test ns_accesslog-1.5 {syntax: ns_accesslog maxbackup} -body {
    ns_accesslog maxbackup 1 y
} -returnCodes error -result {wrong # args: should be "ns_accesslog maxbackup ?nrfiles[1,MAX]?"}

test ns_accesslog-1.6 {syntax: ns_accesslog maxbuffer} -body {
    ns_accesslog maxbuffer 1 y
} -returnCodes error -result {wrong # args: should be "ns_accesslog maxbuffer ?nrlines[0,MAX]?"}

test ns_accesslog-1.7 {syntax: ns_accesslog roll} -body {
    ns_accesslog roll x y
} -returnCodes error -result {wrong # args: should be "ns_accesslog roll ?filepath?"}

test ns_accesslog-1.8 {syntax: ns_accesslog rollfmt} -body {
    ns_accesslog rollfmt x y
} -returnCodes error -result {wrong # args: should be "ns_accesslog rollfmt ?timeformat?"}



test ns_accesslog-2.0 {ns_accesslog extendedheaders} -body {
    ns_accesslog extendedheaders host
} -returnCodes ok -result {host}


cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
