# -*- Tcl -*-

package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv

#
# Enable the channel detach/attach test if the Tcl Thread package is available.
#
if {![catch {package require Thread}]} {
    testConstraint Thread true
}
testConstraint http09 true


test tclconnio-1.1 {ns_connsendfp} -constraints http09 -setup {
    ns_register_proc GET /tclconnio {
        ns_connsendfp [open [ns_pagepath 10bytes]] 5
    }
} -body {
    nstest::http-0.9 -getbody 1 GET /tclconnio
} -cleanup {
    ns_unregister_op GET /tclconnio
} -result 01234



test tclconnio-2.1 {ns_conn channel, no length, 1.0} -setup {
    ns_register_proc GET /tclconnio {
        ns_headers 200 text/plain
        set chan [ns_conn channel]
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
    }
} -body {
    #ns_logctl severity Debug(task) on
    nstest::http -http 1.0 -getbody 1 -getheaders {content-length connection} \
        GET /tclconnio
} -cleanup {
    ns_unregister_op GET /tclconnio
} -result {200 {} close xxx}

#
# The following test fails because 'ns_conn channel' creates a standard Tcl
# TCP channel which does not use Ns_ConnWrite* etc., and so does not correctly
# handle chunking.
#
test tclconnio-2.2 {ns_conn channel, no length, 1.1} -constraints knownBug -setup {
    ns_register_proc GET /tclconnio {
        ns_headers 200 text/plain
        set chan [ns_conn channel]
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
    }
} -body {
    nstest::http -http 1.1 -getbody 1 -getheaders {content-length connection} \
        GET /tclconnio
} -cleanup {
    ns_unregister_op GET /tclconnio
} -result {200 {} keep-alive {1
x
1
x
1
x
0

}}

test tclconnio-2.3 {ns_conn channel w/length, 1.0} -setup {
    ns_register_proc GET /tclconnio {
        ns_headers 200 text/plain 3
        set chan [ns_conn channel]
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
    }
} -body {
    nstest::http -http 1.0 -getbody 1 -getheaders {content-length connection} \
        GET /tclconnio
} -cleanup {
    ns_unregister_op GET /tclconnio
} -result {200 3 close xxx}

test tclconnio-2.4 {ns_conn channel w/length, 1.1} -constraints http09 -setup {
    ns_register_proc GET /tclconnio {
        ns_headers 200 text/plain 3
        set chan [ns_conn channel]
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
    }
} -body {
    nstest::http-0.9 -http 1.1 -getbody 1 -getheaders {content-length connection} \
        GET /tclconnio
} -cleanup {
    ns_unregister_op GET /tclconnio
} -result {200 3 keep-alive xxx}

test tclconnio-2.5 {ns_conn channel, raw} -constraints http09 -setup {
    ns_register_proc GET /tclconnio {
        set chan [ns_conn channel]
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
        puts -nonewline $chan x
        flush $chan
    }
} -body {
    nstest::http-0.9 -getbody 1 -getheaders {content-length connection} \
        GET /tclconnio
} -cleanup {
    ns_unregister_op GET /tclconnio
} -result {{} {} xxx}



test tclconnio-3.1 {thread detach, raw} -constraints {Thread http09} -setup {
    ns_register_proc GET /tclconnio {

        package require Thread

        set tid [thread::create]
        set chan [ns_conn channel]
        thread::transfer $tid $chan

        thread::send $tid "
            puts -nonewline $chan x
            flush $chan
            puts -nonewline $chan x
            flush $chan
            puts -nonewline $chan x
            flush $chan
        "

        thread::release $tid
    }
} -body {
    nstest::http-0.9 -getbody 1 -getheaders {content-length connection} \
        GET /tclconnio
} -cleanup {
    ns_unregister_op GET /tclconnio
} -result {{} {} xxx}



cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
