# -*- Tcl -*-

package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv

test ns_info-1.1 {basic syntax: plain call} -body {
    ns_info
} -returnCodes error -result {wrong # args: should be "ns_info option"}

test ns_info-1.2 {basic syntax: wrong argument} -body {
    ns_info ?
} -returnCodes error -result {bad option "?": must be address, argv0, boottime, builddate, callbacks, config, home, hostname, ipv6, locks, log, major, minor, mimetypes, name, nsd, pagedir, pageroot, patchlevel, pid, platform, pools, scheduled, server, servers, sockcallbacks, ssl, tag, tcllib, threads, uptime, version, winnt, filters, traces, requestprocs, url2file, shutdownpending, or started}

test ns_info-2.1.1 {basic operation} -body {
    set addr [ns_info address]
    expr {[string match *.*.*.* $addr] || [string match *:* $addr]}
} -result 1

test ns_info-2.2.1 {basic operation} -body {
    ns_info argv0
} -match glob -result *nsd*

test ns_info-2.3.1 {basic operation} -body {
    string is integer -strict [ns_info boottime]
} -result 1

test ns_info-2.4.1 {basic operation builddate: positive if builddate = day of test} -body {
    foreach {month day year blub time} [split [ns_info builddate]] {break}
    regexp {[0-9]{10}} [clock scan "$month $day $year"] match
} -result 1

test ns_info-2.5.1 {basic operation} -body {
    string is integer -strict [llength [ns_info callbacks]]
} -result 1

test ns_info-2.6.1 {basic operation} -body {
    ns_info config
} -match "glob" -result "*.nscfg"

test ns_info-2.7.1 {basic operation} -body {
    expr {[string length [ns_info home]]>1}
} -result 1

test ns_info-2.8.1 {basic operation} -setup {
    set hostname_by_exec [exec hostname]
} -body {
    string match [ns_info hostname] $hostname_by_exec
} -result 1

test ns_info-2.9.1 {basic operation} -body {
    expr {[llength [ns_info locks]]>0}
} -result 1

test ns_info-2.10.1 {basic operation} -body {
    expr {[file tail [ns_info log]] ne ""}
} -result 1

test ns_info-2.11.1 {basic operation} -body {
    ns_info major
} -result 4

test ns_info-2.12.1 {basic operation} -body {
    ns_info minor
} -result 99

test ns_info-2.12.2 {mimetypes} -body {
    lindex [ns_info mimetypes] 0
} -match regexp -result {\.[A-z0-9]+}

test ns_info-2.13.1 {basic operation} -body {
    ns_info name
} -result "NaviServer"

test ns_info-2.14.1 {basic operation} -body {
    file tail [ns_info nsd]
} -match glob -result "*nsd*"

test ns_info-2.16.1 {basic operation} -body {
    ns_info patchlevel
} -match "glob" -result "4.99.*"

test ns_info-2.17.1 {basic operation} -body {
    expr {[ns_info pid] == [pid]}
} -result 1

#test ns_info-2.18.1 {basic operation} -body {
#     expr {[ns_info platform] ne ""}
#} -result 1

test ns_info-2.19.1 {basic operation} -body {
    expr {[llength [ns_info pools]] == 0
          || [string match thread* [lindex [ns_info pools] 0 0]]}
} -result 1

test ns_info-2.20.1 {basic operation} -body {
    string is integer -strict [llength [ns_info scheduled]]
} -result 1

test ns_info-2.21.1 {basic operation} -body {
    ns_info server
} -result "test"

test ns_info-2.22.1 {basic operation} -body {
    ns_info servers
} -match "regexp" -result "testvhost|testvhost2|test"


#
# In case we have the nscp driver loaded, it will be listening and
# show up in the sockcallbacks.
#
test ns_info-2.23.1 {basic operation} -body {
    llength [ns_info sockcallbacks]
} -result [llength [info commands "::nscp"]]

test ns_info-2.24.1 {basic operation} -body {
    expr {[ns_info tag] ne ""}
} -result 1

test ns_info-2.26.1 {basic operation} -body {
    expr {[llength [ns_info threads]]>2}
} -result 1

test ns_info-2.27.1 {basic operation} -body {
    set expected_threads 0
    foreach _thread [ns_info threads] {
        switch -- [lindex $_thread 0] {
            "-driver-" -
            "-sched-" -
            "-main-" { set expected_threads 1 }
            "default" {}
        }
    }
    set expected_threads
} -result 1

test ns_info-2.28.1 {basic operation} -body {
    ns_sleep 2
    expr {[ns_info uptime]>1}
} -result 1

test ns_info-2.29.1 {basic operation} -body {
    ns_info version
} -result "4.99"

#test ns_info-2.30.1 {basic operation} -body {
#     string is integer -strict [ns_info winnt]
#} -result 1




cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
