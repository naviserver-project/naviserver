# -*- Tcl -*-

package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv

set list1 {{keyA valueA} {keyB valueB} {keyD valueD}}
set list2 {{keyA valueA} {keyB {{keyB1 valueB1} {keyB2 valueB2}}}
           {keyD valueD}}
set list3 {{C {{CC {{CCC ccc}}}}} {A {{AA aa} {AB ab}}}
           {B {{BA ba} {BB bb} {BC {{BBB bbb}}}}}}
set list4 [list [list keyA "value\0A"] [list keyB value\0\1\0B] \
        [list keyD \0value\0D]]

#
# keylget
#

test keylist-1.1 {keylget tests} -body {
    keylget list1 keyA
} -result {valueA}

test keylist-1.2 {keylget tests} -body {
    list [keylget list1 keyA value] $value
} -result {1 valueA}

test keylist-1.3 {keylget tests} -body {
    keylget list2 keyD
} -result {valueD}

test keylist-1.4 {keylget tests} -body {
    list [keylget list2 keyD value] $value
} -result {1 valueD}

test keylist-1.6 {keylget tests} -body {
    keylget list2 keyC value
} -result {0}

test keylist-1.7 {keylget tests} -body {
    keylget list2 keyB
} -result {{keyB1 valueB1} {keyB2 valueB2}}

test keylist-1.8 {keylget tests} -body {
    keylget list2
} -result {keyA keyB keyD}

test keylist-1.9 {keylget tests} -body {
    set keyedlist {}
    keylget keyedlist keyC value
} -result {0}

test keylist-1.10 {keylget tests} -body {
    set keyedlist {}
    keylget keyedlist
} -result {}

test keylist-1.11 {keylget tests} -body {
    set keyedlist $list2
    keylget keyedlist keyB.keyB1
} -result {valueB1}

test keylist-1.12 {keylget tests} -body {
    set keyedlist $list2
    keylget keyedlist keyB.keyB2
} -result {valueB2}

test keylist-1.13 {keylget tests} -body {
    set keyedlist $list3
    keylget keyedlist C
} -result {{CC {{CCC ccc}}}}

test keylist-1.14 {keylget tests} -body {
    set keyedlist $list3
    keylget keyedlist C.CC
} -result {{CCC ccc}}

test keylist-1.15 {keylget tests} -body {
    set keyedlist $list3
    keylget keyedlist C.CC.CCC
} -result {ccc}

test keylist-1.16 {keylget tests} -body {
    set keyedlist $list3
    keylget keyedlist A.AB
} -result {ab}

test keylist-1.17 {keylget tests} -body {
    set keyedlist $list3
    keylget keyedlist B.BC
} -result {{BBB bbb}}

test keylist-1.18 {keylget tests} -body {
    keylget list2 keyC
} -returnCodes error -result {key "keyC" not found in keyed list}

test keylist-1.19 {keylget tests} -body {
    set keyedlist {{} {keyB valueB} {keyD valueD}}
    keylget keyedlist keyB
} -returnCodes error -result {keyed list entry must be a two element list, found ""}

test keylist-1.20 {keylget tests} -body {
    set keyedlist {keyA {keyB valueB} {keyD valueD}}
    keylget keyedlist keyB
} -returnCodes error -result {keyed list entry must be a two element list, found "keyA"}

test keylist-1.21 {keylget tests} -body {
    set keyedlist {{{} valueA} {keyB valueB} {keyD valueD}}
    keylget keyedlist keyB
} -returnCodes error -result {keyed list key may not be an empty string}

test keylist-1.21 {keylget tests} -body {
    set keyedlist {{{} valueA} {keyB valueB} {keyD valueD}}
    keylget keyedlist keyB
} -returnCodes error -result {keyed list key may not be an empty string}

#test keylist-1.23 {keylget tests} -body {
#    set keyedlist [list [list "Key\0A" valueA] {keyB valueB} {keyD valueD}]
#    keylget keyedlist keyB
#} -returnCodes error -result {keyed list key may not be a binary string}

test keylist-1.24 {keylget tests} -body {
    set keyedlist {{{key.A} valueA} {keyB valueB} {keyD valueD}}
    keylget keyedlist keyB
} -returnCodes error -result {keyed list key may not contain a "."; it is used as a separator in key paths}

test keylist-1.25 {keylget tests} -body {
    keylget
} -returnCodes error -result {wrong # args: keylget listvar ?/key/? ?/retvar/ | {}?}

test keylist-1.26 {keylget tests} -body {
    unset keyedlist
    keylset keyedlist keyA aaa"bbb
    keylget keyedlist keyA
} -result {aaa"bbb}

test keylist-1.27 {keylget tests} -body {
    keylget list4 keyA
} -result "value\0A"

test keylist-1.28 {keylget tests} -body {
    keylget list4 keyB
} -result "value\0\1\0B"

test keylist-1.29 {keylget tests} -body {
    keylget list4 keyD
} -result "\0value\0D"



#
# keylkeys
#

test keylist-2.1 {keylkeys tests} -body {
    keylkeys list1
} -result {keyA keyB keyD}

test keylist-2.2 {keylkeys tests} -body {
    keylkeys list2
} -result {keyA keyB keyD}

test keylist-2.3 {keylkeys tests} -body {
    keylkeys list2 keyB
} -result {keyB1 keyB2}

test keylist-2.4 {keylkeys tests} -body {
    set keyedlist $list3
    keylkeys keyedlist
} -result {C A B}

test keylist-2.5 {keylkeys tests} -body {
    set keyedlist $list3
    keylkeys keyedlist C
} -result {CC}

test keylist-2.6 {keylkeys tests} -body {
    set keyedlist $list3
    keylkeys keyedlist C.CC
} -result {CCC}

test keylist-2.7 {keylkeys tests} -body {
    set keyedlist $list3
    keylkeys keyedlist B.BC
} -result {BBB}

test keylist-2.8 {keylkeys tests} -body {
    keylkeys
} -returnCodes error -result {wrong # args: keylkeys listvar ?/key/?}

test keylist-2.9 {keylkeys tests} -body {
    keylkeys list4
} -result {keyA keyB keyD}

#test keylist-2.10 {keylkeys tests} -body {
#    keylget list4 key\0B
#} -returnCodes error -result {keyed list key may not be a binary string}
test keylist-2.10 {keylkeys tests} -body {
    keylget list4 key\0B
} -returnCodes error -result "key \"key\0B\" not found in keyed list"


#
# keylset
#

test keylist-3.1 {keylset tests} -body {
    catch {unset keyedlist}
    keylset keyedlist keyA valueA
    set keyedlist
} -result {{keyA valueA}}

test keylist-3.2 {keylset tests} -body {
    catch {unset keyedlist}
    keylset keyedlist keyA valueA
    keylset keyedlist keyB valueB
    set keyedlist
} -result {{keyA valueA} {keyB valueB}}

test keylist-3.3 {keylset tests} -body {
    catch {unset keyedlist}
    keylset keyedlist keyA valueA
    keylset keyedlist keyB valueB keyB valueB2
    set keyedlist
} -result {{keyA valueA} {keyB valueB2}}

test keylist-3.3.1 {keylset tests} -body {
    catch {unset keyedlist}
    keylset keyedlist keyA value\0A
    keylset keyedlist keyB \0valueB keyB \0value\0\1\0B2
    set keyedlist
} -result [list [list keyA value\0A] [list keyB \0value\0\1\0B2]]

test keylist-3.4 {keylset tests} -body {
    catch {unset keyedlist}
    keylset keyedlist keyA valueA
    keylset keyedlist keyB valueB
    keylset keyedlist keyA valueA2 keyB valueB2 keyC valueC
    set keyedlist
} -result {{keyA valueA2} {keyB valueB2} {keyC valueC}}

test keylist-3.5 {keylset tests} -body {
    catch {unset keyedlist}
    keylset keyedlist keyA
} -returnCodes error -result {wrong # args: keylset listvar /key/ /value/ ?/key//value/ ...?}

test keylist-3.6 {keylset tests} -body {
    catch {unset keyedlist}
    keylset keyedlist keyA valueA keyB
} -returnCodes error -result {wrong # args: keylset listvar /key/ /value/ ?/key//value/ ...?}

test keylist-3.7 {keylset tests} -body {
    catch {unset keyedlist}
    set keyedlist(foo) 1
    set r [keylset keyedlist keyA valueA]
} -returnCodes error -result {can't set "keyedlist": variable is array}

test keylist-3.8 {keylset tests} -body {
    catch {unset keyedlist}
    set keyedlist {{keyA valueA valueBad} {keyB valueB}}
    keylset keyedlist keyA valueA
} -returnCodes error -result {keyed list entry must be a two element list, found "keyA valueA valueBad"}

test keylist-3.8.1 {keylset tests} -body {
    catch {unset keyedlist}
    keylset keyedlist {} valueA
} -returnCodes error -result {keyed list key may not be an empty string}

#test keylist-3.8.3 {keylset tests} -body {
#    catch {unset keyedlist}
#    keylset keyedlist "key\0A" valueA
#} -returnCodes error -result {keyed list key may not be a binary string}
test keylist-3.8.3 {keylset tests} -body {
    catch {unset keyedlist}
    keylset keyedlist "key\0A" valueA
} -result {}

test keylist-3.9 {keylset tests} -body {
    set keyedlist {}
    keylset keyedlist C.CC.CCC ccc
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}}}

test keylist-3.10 {keylset tests} -body {
    keylset keyedlist A.AA aa
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}} {A {{AA aa}}}}

test keylist-3.11 {keylset tests} -body {
    keylset keyedlist A.AB ab
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}} {A {{AA aa} {AB ab}}}}

test keylist-3.12 {keylset tests} -body {
    keylset keyedlist B.BA ba
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}} {A {{AA aa} {AB ab}}} {B {{BA ba}}}}

test keylist-3.13 {keylset tests} -body {
    keylset keyedlist B.BB bb
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}} {A {{AA aa} {AB ab}}} {B {{BA ba} {BB bb}}}}

test keylist-3.14 {keylset tests} -body {
    keylset keyedlist B.BC.BBB bbb
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}} {A {{AA aa} {AB ab}}} {B {{BA ba} {BB bb} {BC {{BBB bbb}}}}}}

test keylist-3.15 {keylset tests} -body {
    set keyedlist {}
    keylset keyedlist ABCDEF value1
    keylset keyedlist A.SUB  value2
    list $keyedlist [keylkeys keyedlist]
} -result {{{ABCDEF value1} {A {{SUB value2}}}} {ABCDEF A}}

test keylist-3.16 {keylset tests} -body {
    set keyedlist {}
    keylset keyedlist A.SUB  value1
    keylset keyedlist ABCDEF value2
    list $keyedlist [keylkeys keyedlist]
} -result {{{A {{SUB value1}}} {ABCDEF value2}} {A ABCDEF}}

test keylist-4.1 {keyldel tests} -body {
    set keyedlist {{keyA valueA} {keyB valueB} {keyD valueD}}
    keyldel keyedlist keyB
    set keyedlist
} -result {{keyA valueA} {keyD valueD}}

test keylist-4.2 {keyldel tests} -body {
    set keyedlist {{keyA valueA} {keyB valueB} {keyD valueD}}
    keyldel keyedlist keyB
    keyldel keyedlist keyA
    set keyedlist
} -result {{keyD valueD}}

test keylist-4.3 {keyldel tests} -body {
    set keyedlist {{keyA valueA} {keyB valueB} {keyD valueD}}
    keyldel keyedlist keyD
    keyldel keyedlist keyB
    keyldel keyedlist keyA
    set keyedlist
} -result {}

test keylist-4.4 {keyldel tests} -body {
    set keyedlist {{keyA valueA} {keyB valueB} {keyD valueD}}
    keyldel keyedlist keyC
} -returnCodes error -result {key not found: "keyC"}

test keylist-4.5 {keyldel tests} -body {
    keyldel keyedlist
} -returnCodes error -result {wrong # args: keyldel listvar /key/ ?/key/ ...?}

test keylist-4.6 {keyldel tests} -body {
    set keyedlist $list3
    keyldel keyedlist B.BA
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}} {A {{AA aa} {AB ab}}} {B {{BB bb} {BC {{BBB bbb}}}}}}

test keylist-4.7 {keyldel tests} -body {
    keyldel keyedlist A.AA
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}} {A {{AB ab}}} {B {{BB bb} {BC {{BBB bbb}}}}}}

test keylist-4.8 {keyldel tests} -body {
    keyldel keyedlist C.CC.CCC
    set keyedlist
} -result {{A {{AB ab}}} {B {{BB bb} {BC {{BBB bbb}}}}}}

test keylist-4.9 {keyldel tests} -body {
    keyldel keyedlist A.AB
    set keyedlist
} -result {{B {{BB bb} {BC {{BBB bbb}}}}}}

test keylist-4.10 {keyldel tests} -body {
    keyldel keyedlist B.BC.BBB
    set keyedlist
} -result {{B {{BB bb}}}}

test keylist-4.11 {keyldel tests} -body {
    keyldel keyedlist B.BB
    set keyedlist
} -result {}

test keylist-4.12 {keyldel tests} -body {
    set keyedlist $list3
    keyldel keyedlist B
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}} {A {{AA aa} {AB ab}}}}

test keylist-4.13 {keyldel tests} -body {
    keyldel keyedlist A
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}}}

test keylist-4.14 {keyldel tests} -body {
    keyldel keyedlist C
    set keyedlist
} -result {}

test keylist-4.15 {keyldel tests} -body {
    set keyedlist $list3
    keyldel keyedlist B A
    set keyedlist
} -result {{C {{CC {{CCC ccc}}}}}}

#test keylist-4.16 {keyldel tests} -body {
#    keyldel list4 key\0B
#} -returnCodes error -result {keyed list key may not be a binary string}
test keylist-4.16 {keyldel tests} -body {
    keyldel list4 key\0B
} -returnCodes error -result "key not found: \"key\0B\""

# Handling of empty lists.

set keyedlist {}

test keylist-5.1 {empty keyed list tests} -body {
    keylget keyedlist
} -result {}

test keylist-5.2 {empty keyed list tests} -body {
    keylkeys keyedlist
} -result {}

test keylist-5.3 {empty keyed list tests} -body {
    keylget keyedlist A
} -returnCodes error -result {key "A" not found in keyed list}

set keyedlist {          }

test keylist-5.4 {empty keyed list tests} -body {
    keylget keyedlist
} -result {}

test keylist-5.5 {empty keyed list tests} -body {
    keylkeys keyedlist
} -result {}

test keylist-5.6 {empty keyed list tests} -body {
    keylget keyedlist A
} -returnCodes error -result {key "A" not found in keyed list}



cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
