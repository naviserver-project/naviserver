# -*- Tcl -*-

package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv

testConstraint http09 true

# "this is a test\n"

set this_is_a_test      "74 68 69 73 20 69 73 20 61 20 74 65 73 74"
set this_is_a_test_gzip "1f 8b 08 00 00 00 00 00 04 13 2b c9 c8 2c 56 00 a2 44 85 92 d4 e2 12 00 ea e7 1e 0d 0e 00 00 00"

# The streaming case is different as it has synchronization markers after "this is".
set this_is_a_test_gzip_stream "1f 8b 08 00 00 00 00 00 04 03 2a c9 c8 2c 56 c8 2c 06 00 00 00 ff ff 52 48 54 28 49 2d 2e e1 02 00 00 00 ff ff 03 00 12 13 05 72 0f 00 00 00"


set this_is_a_test_gzip_stream2 "1f 8b 08 00 00 00 00 00 04 13 2a c9 c8 2c 56 00 a2 44 85 92 d4 e2 12 00 00 00 00 ff ff 03 00 ea e7 1e 0d 0e 00 00 00"
set this_is_a_test_gzip_stream3 "31 37 0a 1f 8b 08 00 00 00 00 00 04 13 2a c9 c8 2c 56 c8 2c 06 00 00 00 ff ff 0a 65 0a 52 48 54 28 49 2d 2e e1 02 00 00 00 ff ff 0a 61 0a 03 00 12 13 05 72 0f 00 00 00 0a 30 0a 0a"

test compress-1.1 {HTTP 1.0: no Accept-Encoding} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -returnCodes {ok error} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.2 {HTTP 1.0: Accept-Encoding gzip} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding gzip} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    ns_log notice "binary output: $b"
    list {*}[lrange $b 0 2] {*}[lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding [lrange $this_is_a_test_gzip end-10 end]"


test compress-1.2.1 {HTTP 1.0: Accept-Encoding "gzip ; q = 1"} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip ; q = 1"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [lrange [lindex $b end] end-20 end]
} -result "200 gzip Accept-Encoding {[lrange $this_is_a_test_gzip end-20 end]}"


test compress-1.2.2 {HTTP 1.0: Accept-Encoding "gzip;q=1,"} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip;q=1,"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"

test compress-1.2.3 {HTTP 1.0: Accept-Encoding "gzip;q=1a" - ignore invalid qvalue} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip;q=1a"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"

test compress-1.2.4 {HTTP 1.0: Accept-Encoding "gzip;q=0"} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "gzip;q=0"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.2.5 {HTTP 1.0: Accept-Encoding "gzip;q=0."} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "gzip;q=0."} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.2.6 {HTTP 1.0: Accept-Encoding "gzip;q=0.0"} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "gzip;q=0.0"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.2.7 {HTTP 1.0: Accept-Encoding "gzip;q=0.00"} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "gzip;q=0.00"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.2.8 {HTTP 1.0: Accept-Encoding "gzip;q=0.000"} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "gzip;q=0.000"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.2.9 {HTTP 1.0: Accept-Encoding "gzip;q=0.001"} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip;q=0.001"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"



test compress-1.3 {HTTP 1.0: Accept-Encoding gzip (again, checking reset)} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding gzip} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"

test compress-1.4 {HTTP 1.0: Accept-Encoding *} -constraints http09 -body {
    nstest::http-0.9 \
        -http 1.0 \
        -getbinary 1 \
        -encoding binary \
        -setheaders {Accept-Encoding *} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.5 {HTTP 1.0: Accept-Encoding qvalue=0} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -setheaders {Accept-Encoding gzip;q=0} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.6 {HTTP 1.0: Accept-Encoding gzip and identity} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip;q=0.9, identity; q=0.5"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"

test compress-1.8 {HTTP 1.0: Accept-Encoding gzip and identity} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "gzip;q=0.8, identity; q=0.9"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

# test compress-1.9 {HTTP 1.0: Accept-Encoding gzip and *} -body {
#     nstest::http \
#         -http 1.0 \
#         -getbinary 1 \
#         -encoding binary \
#         -setheaders {Accept-Encoding "gzip;q=0.8, *;q=0.9"} \
#         -getheaders {Content-Encoding Vary} \
#         GET /ns_adp_compress.adp
# } -result "200 gzip Accept-Encoding {$this_is_a_test_gzip}"

test compress-1.10 {HTTP 1.0: Accept-Encoding gzip and *} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip;q=0.9, *; q=0.5"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"

test compress-1.11 {HTTP 1.0: Accept-Encoding gzip and identity and *} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip;q=0.9, identity;q=0.9, *;q=0.7"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"

test compress-1.11 {HTTP 1.0: Accept-Encoding gzip and identity and *} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "*;q=0.9, identity;q=0.9, gzip;q=0.7"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.12 {HTTP 1.0: Accept-Encoding identity and *} -body {
    nstest::http \
        -http 1.0 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "identity;q=0.9, *;q=0.7"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-1.13 {HTTP 1.0: Accept-Encoding identity and *} -constraints http09 -body {
    nstest::http-0.9 \
        -http 1.0 \
        -getbinary 1 \
        -encoding binary \
        -setheaders {Accept-Encoding "identity;q=0.7, *;q=0.9"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"


test compress-2.1 {HTTP 1.1: no Accept-Encoding} -constraints http09 -body {
    nstest::http-0.9 \
        -http 1.1 \
        -getbinary 1 \
        -encoding binary \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-2.2 {HTTP 1.1: Accept-Encoding *} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.1 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding *} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip  end-10 end]}"

test compress-2.3 {HTTP 1.1: Accept-Encoding *, qvalue 0} -body {
    nstest::http \
        -http 1.1 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "identity; *;q=0"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-2.4 {HTTP 1.1: Accept-Encoding gzip and identity} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.1 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip;q=0.9, identity; q=0.5"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"

test compress-2.5 {HTTP 1.1: Accept-Encoding gzip and identity} -body {
    nstest::http \
        -http 1.1 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "gzip;q=0.8, identity; q=0.9"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

# test compress-2.6 {HTTP 1.1: Accept-Encoding gzip and *} -body {
#     nstest::http \
#         -http 1.1 \
#         -getbinary 1 \
#         -encoding binary \
#         -setheaders {Accept-Encoding "gzip;q=0.8, *;q=0.9"} \
#         -getheaders {Content-Encoding Vary} \
#         GET /ns_adp_compress.adp
# } -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-2.7 {HTTP 1.1: Accept-Encoding gzip and *} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.1 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip;q=0.9, *; q=0.5"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [lrange [lindex $b end] end-20 end]
} -result "200 gzip Accept-Encoding {[lrange $this_is_a_test_gzip end-20 end]}"

test compress-2.9 {HTTP 1.1: Accept-Encoding gzip and identity and *} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.1 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "gzip;q=0.9, identity;q=0.9, *;q=0.7"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"

test compress-2.10 {HTTP 1.1: Accept-Encoding identity and *} -body {
    nstest::http \
        -http 1.1 \
        -getbinary 1 \
        -setheaders {Accept-Encoding "identity;q=0.9, *;q=0.7"} \
        -getheaders {Content-Encoding Vary} \
        GET /ns_adp_compress.adp
} -result "200 {} Accept-Encoding {$this_is_a_test}"

test compress-2.11 {HTTP 1.1: Accept-Encoding identity and *} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.1 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding "identity;q=0.7, *;q=0.9"} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-10 end]
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-10 end]}"



test compress-3.1 {ns_return, compressed} -constraints http09 -setup {
    ns_register_proc GET /compress {
        ns_conn compress 1
        ns_return 200 text/plain "this is a test"
    }
}  -body {
    set b [nstest::http-0.9 \
               -http 1.1 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding gzip} \
               -getheaders {Content-Encoding Vary} \
               GET /compress]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-15 end]
} -cleanup {
    ns_unregister_op GET /compress
} -result "200 gzip Accept-Encoding 32 {[lrange $this_is_a_test_gzip end-15 end]}"

test compress-3.2 {ns_return, too small to compress} -setup {
    ns_register_proc GET /compress {
        ns_conn compress 1
        ns_return 200 text/plain "ab"
    }
}  -body {
    nstest::http \
        -http 1.1 \
        -getbinary 1 \
        -setheaders {Accept-Encoding gzip} \
        -getheaders {Content-Encoding Vary} \
        GET /compress
} -cleanup {
    ns_unregister_op GET /compress
} -result "200 {} {} {61 62}"

test compress-3.3 {ns_write streaming, compressed} -constraints http09 -setup {
    ns_register_proc GET /compress {
        ns_conn compress 1
        ns_headers 200 text/plain
        ns_write "this is"
        ns_write " a test\n"
    }
}  -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding gzip} \
               -getheaders {Content-Encoding Vary} \
               GET /compress]
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-15 end]
} -cleanup {
    ns_unregister_op GET /compress
} -result "200 gzip Accept-Encoding 47 {[lrange $this_is_a_test_gzip_stream end-15 end]}"

#
# The output of the following test is slightly surprising because it
# is in streaming mode with only one chunk. Therefore, only the gzip
# trailer appears in the second segment.
#

test compress-3.4 {streaming adp, compressed} -constraints http09 -body {
    set b [nstest::http-0.9 \
               -http 1.0 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding gzip} \
               -getheaders {Content-Encoding Vary} \
               GET /ns_adp_compress.adp?stream=1]
    #ns_log notice "binary output: [lindex $b end]"
    list {*}[lrange $b 0 2] [llength [lindex $b end]] [lrange [lindex $b end] end-20 end]
} -result "200 gzip Accept-Encoding 39 {[lrange $this_is_a_test_gzip_stream2 end-20 end]}"

#
# The output of the following test is tricky to match because it is:
#
#   1) streamed in two parts
#   2) each part is compressed
#   3) the parts are wrapped in HTTP chunked header/footer/separators.
#   4) as we are streaming with ns_write and do not notify the IO subsys
#      which is the last write, there are actually 3 chunks:
#       - the gzip header and first part of the data
#       - the second part of the data
#       - the gzip footer, which is flushed with the chunk trailer
#


test compress-3.5 {ns_write streaming + HTTP 1.1 chunking, compressed} -constraints http09 -setup {
    ns_register_proc GET /compress {
        ns_conn compress 1
        ns_headers 200 text/plain
        ns_write "this is"
        ns_write " a test\n"
    }
}  -body {
    set b [nstest::http-0.9 \
               -http 1.1 \
               -getbinary 1 \
               -encoding binary \
               -setheaders {Accept-Encoding gzip connection close} \
               -getheaders {Content-Encoding Vary Transfer-Encoding Content-Length} \
               GET /compress]
    #ns_log notice "binary output: [lindex $b end]"
    list {*}[lrange $b 0 3] [llength [lindex $b end]] [lrange [lindex $b end] end-30 end]
} -cleanup {
    ns_unregister_op GET /compress
} -result "200 gzip Accept-Encoding chunked 60 {[lrange $this_is_a_test_gzip_stream3 end-30 end]}"


test compress-4.1 {HTTP 1.0: no Accept-Encoding} -setup {
    ns_register_proc GET /nsconn {
        ns_return 200 text/plain x[ns_conn zipaccepted]y
    }
} -body {
    nstest::http -http 1.0 -getbody 1 -getheaders {Content-Encoding Vary} \
        GET /nsconn
} -result "200 {} Accept-Encoding x0y"

test compress-4.2 {HTTP 1.0: Accept-Encoding gzip} -setup {
    ns_register_proc GET /nsconn {
        ns_conn compress 0
        ns_return 200 text/plain x[ns_conn zipaccepted]y
    }
} -body {
    nstest::http -http 1.0 -getbody 1 \
        -getheaders {Content-Encoding Vary} \
        -setheaders {Accept-Encoding gzip} \
        GET /nsconn
} -result "200 {} {} x1y"





cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
