# -*- Tcl -*-

package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv



test proc-1.1 {basic syntax} -body {
    ns_register_proc
} -returnCodes error -result {wrong # args: should be "ns_register_proc ?-noinherit? ?--? method url script ?args?"}

test proc-1.2 {basic syntax} -body {
    ns_unregister_op
} -returnCodes error -result {wrong # args: should be "ns_unregister_op ?-noinherit? ?-recurse? ?-server server? ?--? method url"}

test proc-1.3 {basic syntax} -body {
    ns_register_fastpath
} -returnCodes error -result {wrong # args: should be "ns_register_fastpath ?-noinherit? ?--? method url"}



test proc-2.1 {register/unregister} -body {
    ns_register_proc GET /proc-2.1 {ns_return 200 text/plain proc-2.1}
    ns_unregister_op GET /proc-2.1
    nstest::http GET /proc-2.1
} -result 404

test proc-2.2 {register/unregister noinherit} -body {
    ns_register_proc -noinherit GET /proc-2.2 {ns_return 200 text/plain proc-2.2}
    ns_unregister_op -noinherit GET /proc-2.2
    nstest::http GET /proc-2.2
} -result 404

test proc-2.3 {register/unregister recurse} -body {
    ns_register_proc GET /proc-2.1     {ns_return 200 text/plain proc-2.1     }
    ns_register_proc GET /proc-2.1/x   {ns_return 200 text/plain proc-2.1/x   }
    ns_register_proc GET /proc-2.1/x/y {ns_return 200 text/plain proc-2.1/x/y }
    ns_unregister_op -recurse GET /proc-2.1
    nstest::http GET /proc-2.1/x/y
} -result 404



test proc-3.1 {inherit} -setup {
    ns_register_proc GET /proc-3.1 {ns_return 200 text/plain proc-3.1}
} -body {
    list [nstest::http -getbody 1 GET /proc-3.1] \
        [nstest::http -getbody 1 GET /proc-3.1/inherit]
} -cleanup {
    ns_unregister_op GET /proc-3.1
} -result {{200 proc-3.1} {200 proc-3.1}}

test proc-3.2 {noinherit} -setup {
    ns_register_proc -noinherit GET /proc-3.2 {ns_return 200 text/plain proc-3.2}
} -body {
    list [nstest::http -getbody 1 GET /proc-3.2] \
        [nstest::http GET /proc-3.2/inherit]
} -cleanup {
    ns_unregister_op -noinherit GET /proc-3.2
} -result {{200 proc-3.2} 404}

test proc-3.3 {inherit + noinherit} -setup {
    ns_register_proc GET /proc-3.3 {ns_return 200 text/plain inherit}
    ns_register_proc -noinherit GET /proc-3.3 {ns_return 200 text/plain noinherit}
} -body {
    list [nstest::http -getbody 1 GET /proc-3.3/inherit] \
        [nstest::http -getbody 1 GET /proc-3.3]
} -cleanup {
    ns_unregister_op GET /proc-3.3
    ns_unregister_op -noinherit GET /proc-3.3
} -result {{200 inherit} {200 noinherit}}

test proc-3.4 {override} -setup {
    ns_register_proc GET /proc-3.4 {ns_return 200 text/plain x}
    ns_register_proc GET /proc-3.4 {ns_return 200 text/plain y}
} -body {
    nstest::http -getbody 1 GET /proc-3.4/inherit
} -cleanup {
    ns_unregister_op GET /proc-3.4
} -result {200 y}

test proc-3.5 {override noinherit} -setup {
    ns_register_proc -noinherit GET /proc-3.5 {ns_return 200 text/plain x}
    ns_register_proc -noinherit GET /proc-3.5 {ns_return 200 text/plain y}
} -body {
    nstest::http -getbody 1 GET /proc-3.5
} -cleanup {
    ns_unregister_op -noinherit GET /proc-3.5
} -result {200 y}


test proc-4.1 {register with query variable} -setup {
    ns_register_proc GET /proc-4.1 {ns_return 200 text/plain proc-4.1-NO_X}
    ns_register_proc GET /proc-4.1?x=1 {ns_return 200 text/plain proc-4.1-x=1}
    ns_register_proc GET /proc-4.1?x=2 {ns_return 200 text/plain proc-4.1-x=2}
    ns_register_proc GET /foo/proc-4.1?x=3 {ns_return 200 text/plain proc-4.1-x=3}
} -body {
    list \
        [nstest::http -getbody 1 GET /proc-4.1?x=1] \
        [nstest::http -getbody 1 GET /proc-4.1?x=2]
} -cleanup {
    ns_unregister_op GET /proc-4.1
    ns_unregister_op GET /proc-4.1?x=1
    ns_unregister_op GET /proc-4.1?x=2
} -result {{200 proc-4.1-NO_X} {200 proc-4.1-NO_X}}

test proc-4.2 {register with glob} -setup {
    ns_register_proc GET /proc-4.2* {ns_return 200 text/plain proc-4.2}
} -body {
    nstest::http -getbody 1 GET /proc-4.2TEST
} -cleanup {
    ns_unregister_op GET /proc-4.2*
} -result {200 proc-4.2}

#
# Test cases having the registered proc in the middle of the request
# path
#
test proc-4.3 {register without wild card, call with longer path} -setup {
    ns_register_proc GET /foo/proc.pl {ns_return 200 text/plain proc-4.3-[ns_conn url]}
} -body {
    nstest::http -getbody 1 GET /foo/proc.pl/bar
} -cleanup {
    ns_unregister_op GET /foo/proc.pl
} -result {200 proc-4.3-/foo/proc.pl/bar}

test proc-4.4 {register with wild card, call with longer path} -setup {
    ns_register_proc GET /foo/*.pl {ns_return 200 text/plain proc-4.4-[ns_conn url]}
} -body {
    nstest::http GET /foo/proc.pl/bar
} -cleanup {
    ns_unregister_op GET /foo/*.pl
} -result {404}

test proc-4.5 {register with wild card, call with longer path} -setup {
    ns_register_proc GET /foo/*.pl* {ns_return 200 text/plain proc-4.5-[ns_conn url]}
} -body {
    nstest::http GET /foo/proc.pl/bar
} -cleanup {
    ns_unregister_op GET /foo/*.pl*
} -result {404}


test proc-5.1 {fastpath} -setup {
    ns_register_proc GET /10bytes {ns_return 200 text/plain error}
    ns_register_fastpath GET /10bytes
} -body {
    nstest::http -getbody 1 GET /10bytes
} -cleanup {
    ns_unregister_op GET /10bytes
} -result {200 0123456789}



cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
