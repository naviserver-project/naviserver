# -*- Tcl -*-

package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv


test ns_purgefiles-1.0 {syntax: ns_rollfile} -body {
    ns_purgefiles
} -returnCodes error -result {wrong # args: should be "ns_purgefiles /path/ /maxbackups[0,1000]/"}

test ns_rollfile-1.0 {syntax: ns_rollfile} -body {
    ns_rollfile
} -returnCodes error -result {wrong # args: should be "ns_rollfile /path/ /maxbackups[0,1000]/"}

test ns_mkdtemp-1.0 {syntax: ns_mkdtemp} -body {
    ns_mkdtemp ? ?
} -returnCodes error -result {wrong # args: should be "ns_mkdtemp ?/template/?"}

test ns_fseekchars-1.0 {syntax: ns_fseekchars} -body {
    ns_fseekchars
} -returnCodes error -result {wrong # args: should be "ns_fseekchars /channelId/ /searchstring/"}

test ns_filestat-1.0 {syntax: ns_filestat} -body {
    ns_filestat
} -returnCodes error -result {wrong # args: should be "ns_filestat /filename/ ?/varname/?"}

test ns_ftruncate-1.0 {syntax: ns_ftruncate} -body {
    ns_ftruncate id1 1 extra
} -returnCodes error -result {wrong # args: should be "ns_ftruncate /channelId/ ?/length[0,MAX]/?"}

test ns_kill-1.0 {syntax: ns_kill} -body {
    ns_kill
} -returnCodes error -result {wrong # args: should be "ns_kill ?-nocomplain? /pid/ /signal[0,MAX]/"}

test ns_normalizepath-1.0 {syntax: ns_normalizepath} -body {
    ns_normalizepath
} -returnCodes error -result {wrong # args: should be "ns_normalizepath /path/"}

test ns_shutdown-1.0 {syntax: ns_shutdown} -body {
    ns_shutdown 1 ?
} -returnCodes error -result {wrong # args: should be "ns_shutdown ?-restart? ?--? ?/timeout/?"}

test ns_sleep-1.0 {syntax: ns_sleep} -body {
    ns_sleep 1 ?
} -returnCodes error -result {wrong # args: should be "ns_sleep /timespec/"}


test ns_symlink-1.0 {syntax: ns_symlink} -body {
    ns_symlink
} -returnCodes error -result {wrong # args: should be "ns_symlink ?-nocomplain? ?--? /file1/ /file2/"}

test ns_truncate-1.0 {syntax: ns_truncate} -body {
    ns_truncate
} -returnCodes error -result {wrong # args: should be "ns_truncate /filename/ ?/length[0,MAX]/?"}

test ns_writefp-1.0 {syntax: ns_writefp} -body {
    ns_writefp
} -returnCodes error -result {wrong # args: should be "ns_writefp /channelId/ ?/nbytes/?"}


# ns_chan
test ns_chan-1.0 {syntax: ns_chan} -body {
    ns_chan ? ?
} -returnCodes error -result {ns_chan: bad subcommand "?": must be cleanup, list, create, put, or get}

test ns_chan-cleanup-1.0 {syntax: ns_chan cleanup} -body {
    ns_chan cleanup -
} -returnCodes error -result {wrong # args: should be "ns_chan cleanup ?-shared?"}

test ns_chan-create-1.0 {syntax: ns_chan create} -body {
    ns_chan create -
} -returnCodes error -result {wrong # args: should be "ns_chan create /channel/ /name/"}

test ns_chan-get-1.0 {syntax: ns_chan get} -body {
    ns_chan get
} -returnCodes error -result {wrong # args: should be "ns_chan get /name/"}

test ns_chan-list-1.0 {syntax: ns_chan list} -body {
    ns_chan list -
} -returnCodes error -result {wrong # args: should be "ns_chan list ?-shared?"}

test ns_chan-put-1.0 {syntax: ns_chan put} -body {
    ns_chan put
} -returnCodes error -result {wrong # args: should be "ns_chan put /name/"}

# ns_mktemp
test ns_mktemp-1.0 {syntax: ns_mktemp} -body {
    ns_mktemp ? ?
} -returnCodes error -result {wrong # args: should be "ns_mktemp ?-nocomplain? ?--? ?/template/?"}

test ns_mktemp-1.1 {call without argument} -body {
    set t [ns_mktemp]
    return [list [file exists $t] [file readable $t]  [file isdirectory $t]]
} -result {0 0 0}

test ns_mktemp-1.2 {call with argument} -body {
    set t [ns_mktemp [ns_config ns/parameters tmpdir]/ns-XXXXXX]
    return [list [file exists $t] [file readable $t]  [file isdirectory $t]]
} -result {0 0 0}


cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
