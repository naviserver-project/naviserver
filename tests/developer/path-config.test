# -*- Tcl -*-
package require tcltest 2.2
namespace import -force ::tcltest::*
::tcltest::configure -verbose start {*}$argv

#
# Run all tests
#
#   (cd tests/developer && tclsh path-config.test)
#

# Run part of the tests, e.g.
#
#   (cd tests/developer && tclsh path-config.test -match logdir-1\*)
#

# Run a single test with a special combination of parameters:
#
#    (cd tests/developer && params="serverdir /opt/local/var/www3 serverrootproc {{return HOST}}" /usr/local/ns/bin/nsd -f -t test-paths-config.tcl 2>&1)
#
#
# To run these tests, we need the following directories with write permissions
#
#    /opt/local/var
#    /opt/local/var/log
#    /opt/local/var/www3
#    /opt/local/var/www3/HOST/logs/
#    /opt/local/var/www3/HOST/log/
#    /usr/local/ns
#    /usr/local/ns/s0

proc runtest {params} {
    catch {exec bash -c "params=\"$params\" /usr/local/ns/bin/nsd -f -t test-paths-config.tcl" 2>@1} testresult
    set extract {}
    foreach l [split $testresult \n] {
        if {[regexp {(Fatal|Error): (.*)$} $l . severity msg]} {
            append extract "$severity " [list $msg] \n
        }
        if {[string match ":                  *" $l]} {
            append extract [string trimleft [string range $l 1 end]] \n
        }
    }
    puts stderr $extract
    return $extract
}

############################################################################################################
# logdir tests
############################################################################################################
#
# logdir test, when no serverdir is provided:
#
test logdir-1.1  {default values} -body {
    set result  [runtest {case 1.1}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns} {serverlogdir /usr/local/ns/logs}}

test logdir-1.3  {relative serverlogdir} -body {
    set result  [runtest {case 1.3 serverlogdir log}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns} {serverlogdir /usr/local/ns/log}}

test logdir-1.4  {absolute serverlogdir} -body {
    set result  [runtest {case 1.4 serverlogdir /opt/local/var/log}]
    lmap {k v} $result {if {$k ni {serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverlogdir /opt/local/var/log}}

test logdir-1.5  {absolute global logdir} -body {
    set result  [runtest {case 1.5 logdir /opt/local/var/log}]
    lmap {k v} $result {if {$k ni {serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverlogdir /opt/local/var/log}}

test logdir-1.6  {absolute global logdir and absolute server logdir} -body {
    set result  [runtest {case 1.6 logdir /opt/local/var/log serverlogdir /opt/local/var/log/s0}]
    lmap {k v} $result {if {$k ni {serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverlogdir /opt/local/var/log/s0}}



#
# logdir tests with a relative serverdir
#
test logdir-2.1  {relative serverdir with default values} -body {
    set result  [runtest {case 2.1 serverdir s0}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns/s0} {serverlogdir /usr/local/ns/s0/logs}}

test logdir-2.2  {relative serverdir with relative server logdir} -body {
    set result  [runtest {case 2.2 serverdir s0 serverlogdir log}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns/s0} {serverlogdir /usr/local/ns/s0/log}}

test logdir-2.3  {relative serverdir with absolute server logdir} -body {
    set result  [runtest {case 2.3 serverdir s0 serverlogdir /opt/local/var/log/s0}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns/s0} {serverlogdir /opt/local/var/log/s0}}

#
# logdir tests with an absolute serverdir
#
test logdir-3.1  {absolute serverdir with default values} -body {
    set result  [runtest {case 3.1 serverdir /opt/local/var/www3}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverlogdir /opt/local/var/www3/logs}}

test logdir-3.2  {absolute serverdir with relative server logdir} -body {
    set result  [runtest {case 3.2 serverdir /opt/local/var/www3 serverlogdir log}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverlogdir /opt/local/var/www3/log}}

test logdir-3.3  {absolute serverdir with an absolute server logdir} -body {
    set result  [runtest {case 3.3 serverdir /opt/local/var/www3 serverlogdir /opt/local/var/log/s0}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverlogdir /opt/local/var/log/s0}}


#
# logdir tests with a computed absolute serverdir
#
test logdir-4.1  {computed absolute serverdir with default values} -body {
    set result  [runtest {case 4.1 serverdir /opt/local/var/www3 serverrootproc {{return /opt/local/var/www3/HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverlogdir /opt/local/var/www3/HOST/logs}}

test logdir-4.2  {computed absolute serverdir with relative server logdir} -body {
    set result  [runtest {case 4.2 serverdir /opt/local/var/www3 serverlogdir log serverrootproc {{return /opt/local/var/www3/HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverlogdir /opt/local/var/www3/HOST/log}}

test logdir-4.3  {computed absolute serverdir with an absolute server logdir} -body {
    set result  [runtest {case 4.3 serverdir /opt/local/var/www3 serverlogdir /opt/local/var/log/s0 serverrootproc {{return /opt/local/var/www3/HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverlogdir /opt/local/var/log/s0}}


#
# logdir tests with a computed relative serverdir
#
test logdir-5.1  {computed relative serverdir with default values} -body {
    set result  [runtest {case 5.1 serverdir /opt/local/var/www3 serverrootproc {{return HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverlogdir /opt/local/var/www3/HOST/logs}}

test logdir-5.2  {computed relative serverdir with relative server logdir} -body {
    set result  [runtest {case 5.2 serverdir /opt/local/var/www3 serverlogdir log serverrootproc {{return HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverlogdir /opt/local/var/www3/HOST/log}}

test logdir-5.3  {computed relative serverdir with an absolute server logdir} -body {
    set result  [runtest {case 5.3 serverdir /opt/local/var/www3 serverlogdir /opt/local/var/log/s0 serverrootproc {{return HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverlogdir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverlogdir /opt/local/var/log/s0}}

############################################################################################################
# pagedir tests
############################################################################################################
#
# pagedir test, when no serverdir is provided:
#
test pagedir-1.1  {default values} -body {
    set result  [runtest {case 1.1}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns} {serverpagedir /usr/local/ns/pages}}

test pagedir-1.3  {relative serverpagedir} -body {
    set result  [runtest {case 1.3 serverpagedir www}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns} {serverpagedir /usr/local/ns/www}}

test pagedir-1.4  {absolute serverpagedir} -body {
    set result  [runtest {case 1.4 serverpagedir /opt/local/var/www}]
    lmap {k v} $result {if {$k ni {serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverpagedir /opt/local/var/www}}

#
# pagedir tests with a relative serverdir
#
test pagedir-2.1  {relative serverdir with default values} -body {
    set result  [runtest {case 2.1 serverdir s0}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns/s0} {serverpagedir /usr/local/ns/s0/pages}}

test pagedir-2.2  {relative serverdir with relative server pagedir} -body {
    set result  [runtest {case 2.2 serverdir s0 serverpagedir www}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns/s0} {serverpagedir /usr/local/ns/s0/www}}

test pagedir-2.3  {relative serverdir with absolute server pagedir} -body {
    set result  [runtest {case 2.3 serverdir s0 serverpagedir /opt/local/var/www/s0}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /usr/local/ns/s0} {serverpagedir /opt/local/var/www/s0}}

#
# pagedir tests with an absolute serverdir
#
test pagedir-3.1  {absolute serverdir with default values} -body {
    set result  [runtest {case 3.1 serverdir /opt/local/var/www3}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverpagedir /opt/local/var/www3/pages}}

test pagedir-3.2  {absolute serverdir with relative server pagedir} -body {
    set result  [runtest {case 3.2 serverdir /opt/local/var/www3 serverpagedir www}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverpagedir /opt/local/var/www3/www}}

test pagedir-3.3  {absolute serverdir with an absolute server pagedir} -body {
    set result  [runtest {case 3.3 serverdir /opt/local/var/www3 serverpagedir /opt/local/var/www/s0}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverpagedir /opt/local/var/www/s0}}


#
# pagedir tests with a computed absolute serverdir
#
test pagedir-4.1  {computed absolute serverdir with default values} -body {
    set result  [runtest {case 4.1 serverdir /opt/local/var/www3 serverrootproc {{return /opt/local/var/www3/HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverpagedir /opt/local/var/www3/HOST/pages}}

test pagedir-4.2  {computed absolute serverdir with relative server pagedir} -body {
    set result  [runtest {case 4.2 serverdir /opt/local/var/www3 serverpagedir www serverrootproc {{return /opt/local/var/www3/HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverpagedir /opt/local/var/www3/HOST/www}}

test pagedir-4.3  {computed absolute serverdir with an absolute server pagedir} -body {
    set result  [runtest {case 4.3 serverdir /opt/local/var/www3 serverpagedir /opt/local/var/www/s0 serverrootproc {{return /opt/local/var/www3/HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverpagedir /opt/local/var/www/s0}}


#
# pagedir tests with a computed relative serverdir
#
test pagedir-5.1  {computed relative serverdir with default values} -body {
    set result  [runtest {case 5.1 serverdir /opt/local/var/www3 serverrootproc {{return HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverpagedir /opt/local/var/www3/HOST/pages}}

test pagedir-5.2  {computed relative serverdir with relative server pagedir} -body {
    set result  [runtest {case 5.2 serverdir /opt/local/var/www3 serverpagedir www serverrootproc {{return HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverpagedir /opt/local/var/www3/HOST/www}}

test pagedir-5.3  {computed relative serverdir with an absolute server pagedir} -body {
    set result  [runtest {case 5.3 serverdir /opt/local/var/www3 serverpagedir /opt/local/var/www/s0 serverrootproc {{return HOST}}}]
    lmap {k v} $result {if {$k ni {serverdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{serverdir /opt/local/var/www3} {serverpagedir /opt/local/var/www/s0}}


############################################################################################################
# homedir tests
############################################################################################################
proc flatlist {l} { lmap e $l {set e} }
#
# homedir test, when no serverdir is provided:
#
test homedir-1.0 {default values} -body {
    set result  [runtest {case 1.1}]
    lmap {k v} $result {if {$k ni {Fatal Error homedir serverdir serverlogdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result [flatlist {
    {homedir /usr/local/ns}
    {serverdir /usr/local/ns}
    {serverlogdir /usr/local/ns/logs}
    {serverpagedir /usr/local/ns/pages}
}]
                              

test homedir-1.1.1 {invalid (non-existing) absolute homedir} -body {
    set result  [runtest {case 1.1.1
        homedir /ns
    }]
    lmap {k v} $result {if {$k ni {Fatal Error homedir serverdir serverlogdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{Fatal {nsmain: chdir(/ns) failed: 'No such file or directory'}}}

test homedir-1.1.2 {existing homedir, invalid (non-existing) initfile} -body {
    set result  [runtest {case 1.1.2
        homedir /opt/local/ns/foo
    }]
    lmap {k v} $result {if {$k ni {Fatal homedir serverdir serverlogdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{Fatal {tclinit: invalid init file: /opt/local/ns/foo/bin/init.tcl}}}

test homedir-1.1.3 {cannot load module} -body {
    set result  [runtest {case 1.1.3
        homedir /opt/local/ns/foo
        libdir /usr/local/ns/tcl
        serverinitfile /usr/local/ns/bin/init.tcl
    }]
    lmap {k v} $result {if {$k ni {Fatal homedir serverdir serverlogdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result {{Fatal {modload: failed to load module 'nslog.so'}}}

test homedir-1.1.4 {can load module with provided bin path, server comes up} -body {
    set result  [runtest {case 1.1.4
        homedir /opt/local/ns/foo
        bindir /usr/local/ns/bin/
        libdir /usr/local/ns/tcl
        serverinitfile /usr/local/ns/bin/init.tcl
    }]
    lmap {k v} $result {if {$k ni {Fatal homedir serverdir serverlogdir serverpagedir}} continue; list $k $v}
} -returnCodes {error ok} -result [flatlist {
    {homedir /opt/local/ns/foo}
    {serverdir /opt/local/ns/foo}
    {serverlogdir /opt/local/ns/foo/logs}
    {serverpagedir /opt/local/ns/foo/pages}
}]



cleanupTests
