# -*- Tcl -*-


package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv



test ns_log-1.1 {basic syntax} -body {
    ns_log
} -returnCodes error -result {wrong # args: should be "ns_log severity string ?string ...?"}

test ns_log-1.2 {basic syntax} -body {
    ns_log ? ?
} -returnCodes error -match glob -result {unknown severity: "?": should be one of: Notice Warning Error Fatal Bug Debug Dev*}



test ns_log-2.1 {basic syntax} -body {
    ns_logctl
} -returnCodes error -result {wrong # args: should be "ns_logctl option ?arg?"}

test ns_log-2.2 {basic syntax} -body {
    ns_logctl ?
} -returnCodes error -result {bad option "?": must be count, flush, get, hold, peek, register, release, severities, severity, stats, truncate, or unregister}



ns_logctl hold
ns_logctl trunc
set logdebug [ns_logctl severity debug on]
set logdev [ns_logctl severity dev on]

test ns_log-3.1 {severity} -body {
    ns_log notice test
    ns_logctl get
} -match glob -result "* Notice: test\n"

test ns_log-3.2 {severity} -body {
    ns_log warning test
    ns_logctl get
} -match glob -result "* Warning: test\n"

test ns_log-3.3 {severity} -body {
    ns_log error test
    ns_logctl get
} -match glob -result "* Error: test\n"

test ns_log-3.4 {ns_log + severity "fatal" never writes} -body {
    ns_log fatal test
    ns_logctl get
} -result {}

test ns_log-3.5 {severity} -body {
    ns_log bug test
    ns_logctl get
} -match glob -result "* Bug: test\n"

test ns_log-3.6 {severity} -body {
    ns_log debug test
    ns_logctl get
} -match glob -result "* Debug: test\n"

test ns_log-3.7 {severity} -body {
    ns_log dev test
    ns_logctl get
} -match glob -result "* Dev: test\n"



test ns_log-4.1 {multiple args} -body {
    ns_log notice one two
    ns_logctl get
} -match glob -result "* Notice: one two\n"

test ns_log-4.2 {multiple args} -body {
    ns_log notice one two three
    ns_logctl get
} -match glob -result "* Notice: one two three\n"



test ns_log-5.1 {buffering} -body {
    ns_log notice one
    ns_log notice two
    ns_logctl get
} -match glob -result "* Notice: one\n* Notice: two\n"

test ns_log-5.2 {count buffered log entries} -body {
    ns_logctl flush
    ns_log notice one
    ns_log notice two
    set n [ns_logctl count]
    ns_logctl trunc
    set n
} -result 2

test ns_log-5.3 {peek} -body {
    ns_log notice test
    set equal [string equal [ns_logctl peek] [ns_logctl peek]]
    ns_logctl trunc
    set equal
} -result 1

test ns_log-5.4 {trunc} -body {
    ns_log notice test
    ns_logctl trunc
    ns_logctl get
} -result {}

test ns_log-5.5 {trunc} -body {
    ns_log notice test1
    ns_log notice test2
    ns_logctl trunc [expr [llength [split [ns_logctl peek] "\n"]] - 2]
    ns_logctl get
} -match glob -result {* Notice: test1
}

test ns_log-5.6 {get} -body {
    ns_log notice test
    ns_logctl get
    ns_logctl get
} -result {}

test ns_log-5.7 {get} -body {
        ns_logctl flush
    ns_log notice test
    set n [ns_logctl count]
    ns_logctl get
    lappend n [ns_logctl count]
} -result {1 0}

test ns_log-5.8 {flush} -body {
    ns_log notice test
    ns_logctl flush
    ns_logctl get
} -result {}

test ns_log-5.9 {flush} -body {
        ns_logctl flush
    ns_log notice test
    set n [ns_logctl count]
    ns_logctl flush
    lappend n [ns_logctl count]
} -result {1 0}



test ns_log-6.1 {configuration} -body {
    ns_logctl severity
} -returnCodes error -result {wrong # args: should be "ns_logctl severity severity-level ?-color color? ?-intensity intensity? ?bool?"}

test ns_log-6.2 {configuration} -body {
    ns_logctl severity ?
} -returnCodes error -match glob -result {unknown severity: "?": should be one of: Notice Warning Error Fatal Bug Debug Dev*}

test ns_log-6.3 {enable/disable} -body {
        set orig [ns_logctl severity debug]
        set old  [ns_logctl severity debug [expr {$orig ? 0 : 1}]]
        set new  [ns_logctl severity debug $orig]
        expr {"$orig $old $new" eq "1 1 0" || "$orig $old $new" eq "0 0 1"}
} -cleanup {
        unset -nocomplain orig old new
} -result 1

test ns_log-6.4 {list severities} -body {
        ns_logctl severities
} -match glob -result {Notice Warning Error Fatal Bug Debug Dev*}

test ns_log-6.5 {bounds check} -body {
        ns_logctl flush
        ns_logctl hold
        ns_log 639 test
        set n [ns_logctl count]
        ns_logctl release
} -result {}

test ns_log-6.6 {bounds check} -body {
        ns_log 640 test
} -returnCodes error -match glob -result {unknown severity: "640": should be one of: Notice Warning Error Fatal Bug Debug Dev*}





test ns_log-7.0 {two callbacks test} -body {
    unset -nocomplain glob
    set ::glob 0
    proc logclbk1 args {
        incr ::glob
    }
    proc logclbk2 args {
        incr ::glob
    }
    ns_logctl flush
    set handle1 [ns_logctl register logclbk1]
    set handle2 [ns_logctl register logclbk2]
    ns_log notice "Log callback test 7.0"
    ns_logctl flush
    set ::glob
} -cleanup {
    unset -nocomplain glob
    ns_logctl unregister $handle1
    ns_logctl unregister $handle2
} -result 2

ns_logctl trunc
ns_logctl release
ns_logctl severity debug $logdebug
ns_logctl severity dev $logdev

unset logdebug logdev


cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
