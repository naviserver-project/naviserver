# -*- Tcl -*-

package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv

#######################################################################################
#  test ns_parsefieldvalue
#######################################################################################

test ns_random-1.0 {ns_rand with 1 arg - integer} -body {
    set rand [ns_rand 10]
    return [list [expr {$rand < 10}] [string is integer -strict $rand] ]
} -result {1 1}

test ns_random-1.1 {ns_rand with 0 arg - float} -body {
    set rand [ns_rand]
    return [list [expr {$rand < 1}] [string is double -strict $rand] ]
} -result {1 1}

#######################################################################################
#  test ns_fmttime
#######################################################################################

test ns_fmttime-1.0 {ns_fmttime without format} -body {
    #
    # "ns_fmttime" depends on the local time-zone. Since we cannot
    # pass the timezone as an argument, we make a rough test here.
    #
    return [llength [ns_fmttime 1563812758]]
} -result {5}
    
test ns_fmttime-1.1 {ns_rand with 0 arg - float} -body {
    #
    # The year information is in all timezones for this timestamp
    # identical.
    #
    return [ns_fmttime 1563812758 "%Y 00:00"]
} -result {2019 00:00}

#######################################################################################
#  test ns_quotehtml
#######################################################################################

test ns_quotehtml {ns_quotehtml with typical value} -body {
    return [ns_quotehtml {<span class="foo">}]
} -result {&lt;span class=&#34;foo&#34;&gt;}

#######################################################################################
#  test ns_valid_utf8
#######################################################################################

test ns_valid_utf8-1.0 {ns_valid_utf8 with typical value} -body {
    return [ns_valid_utf8 "hello world"]
} -result 1

test ns_valid_utf8-1.0 {invalid utf8, containing x85 at the end} -body {
    return [ns_valid_utf8 "forschungsprojek\x85"]
} -result 0

test ns_valid_utf8-1.0 {valid utf8, containing x85 at the end} -body {
    return [ns_valid_utf8 "forschungsprojek\xc3\x85"]
} -result 1


#
# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
