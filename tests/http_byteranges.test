# -*- Tcl -*-
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# The Initial Developer of the Original Code and related documentation
# is America Online, Inc. Portions created by AOL are Copyright (C) 1999
# America Online, Inc. All Rights Reserved.
#
#

#
# HTTP 1.1 Byte Ranges: RFC 2616 14.35.1, 14.6, 19.3
#



package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv


if {[ns_config test listenport]} {
    testConstraint serverListen true
}



test byteranges-1.1a {Simple range, beginning, no fd, no writer} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=0-4} \
        -getheaders {content-length content-range content-type} \
        GET /10bytes
} -result {206 5 {bytes 0-4/10} */* 01234}

test byteranges-1.1b {Simple range, beginning, no fd, writer} -constraints serverListen -body {
    nstest::http -getbody 0 -setheaders {range bytes=0-1500} \
        -getheaders {content-length content-range content-type} \
        GET /2048bytes
} -result {206 1501 {bytes 0-1500/2048} */*}

test byteranges-1.1c {Simple range, beginning, fd, writer} -constraints serverListen -body {
    nstest::http -getbody 0 -setheaders {range bytes=0-4} \
        -getheaders {content-length content-range content-type} \
        GET /16480bytes
} -result {206 5 {bytes 0-4/16480} */*}


test byteranges-1.2 {Simple range, end} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=5-9} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 5 {bytes 5-9/10} 56789}

test byteranges-1.3 {Relative range} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=5-} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 5 {bytes 5-9/10} 56789}

test byteranges-1.4 {Relative range} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=-5} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 5 {bytes 5-9/10} 56789}

test byteranges-1.5 {Single byte (1st)} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=0-0} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 1 {bytes 0-0/10} 0}

test byteranges-1.6 {Single byte (2nd)} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=1-1} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 1 {bytes 1-1/10} 1}

test byteranges-1.7 {Single byte (last)} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=9-9} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 1 {bytes 9-9/10} 9}

test byteranges-1.8 {Request more than exists} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=0-10} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 10 {bytes 0-9/10} 0123456789}

test byteranges-1.9 {Request more than exists} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=-10} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 10 {bytes 0-9/10} 0123456789}



test byteranges-2.1 {Multiple contiguous ranges} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=0-2,3-6} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 7 {bytes 0-6/10} 0123456}

test byteranges-2.2 {Multiple contiguous ranges} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=0-2,3-5,6-8} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 9 {bytes 0-8/10} 012345678}

#
# The following test lead to a crash in earlier versions
#
test byteranges-2.2.1 {Multiple contiguous ranges, single bytes} -constraints serverListen -body {
    set r [nstest::http -getbody 1 -setheaders {range bytes=1-1,3-3,5-5,7-7,9-9} \
               -getheaders {content-length content-range} \
               GET /10bytes]
    string map {\r ""} $r
} -result {206 471 {} {--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 1-1/10

1
--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 3-3/10

3
--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 5-5/10

5
--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 7-7/10

7
--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 9-9/10

9
--NaviServerNaviServerNaviServer--
}}

test byteranges-2.3 {Multiple non-contiguous ranges} -constraints serverListen -body {
    set r [nstest::http -getbody 1 -setheaders {range bytes=0-2,7-9} \
               -getheaders {content-type content-range content-length} \
               GET /10bytes]
    string map {\r ""} $r
} -returnCodes {ok error} -result [list 206 {multipart/byteranges; boundary=NaviServerNaviServerNaviServer} {} 214 \
        {--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 0-2/10

012
--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 7-9/10

789
--NaviServerNaviServerNaviServer--
}]

test byteranges-2.4 {Multiple ranges, out of order} -constraints serverListen -body {
    set r [nstest::http -getbody 1 -setheaders {range bytes=7-9,0-2} \
               -getheaders {content-type content-range content-length} \
               GET /10bytes]
    string map {\r ""} $r
} -result [list 206 {multipart/byteranges; boundary=NaviServerNaviServerNaviServer} {} 214 \
        {--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 7-9/10

789
--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 0-2/10

012
--NaviServerNaviServerNaviServer--
}]

test byteranges-2.5 {Multiple overlapping ranges} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=2-8,3-6,4-7} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 7 {bytes 2-8/10} 2345678}

test byteranges-2.6 {Multiple overlapping ranges} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=2-8,1-6,4-9} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {206 9 {bytes 1-9/10} 123456789}



test byteranges-2.8.1 {Multiple non-contiguous ranges, fd} \
    -constraints {serverListen} -body {
        set r [nstest::http -getbody 1 -setheaders {range bytes=0-2,7-9} \
                   -getheaders {content-type content-range content-length} \
                   GET /16480bytes]
        string map {\r ""} $r
} -result [list 206 {multipart/byteranges; boundary=NaviServerNaviServerNaviServer} {} 220 \
        {--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 0-2/16480

012
--NaviServerNaviServerNaviServer
content-type: */*
content-range: bytes 7-9/16480

789
--NaviServerNaviServerNaviServer--
}]

test byteranges-2.8.2 {Simple range, beginning, fd} \
    -constraints {serverListen} -body {
    nstest::http -getbody 1 -setheaders {range bytes=0-4} \
        -getheaders {content-length content-range} \
        GET /16480bytes
} -result {206 5 {bytes 0-4/16480} 01234}

test byteranges-2.8.3 {No range, beginning} \
    -constraints {serverListen} -body {
    nstest::http \
        -getheaders {content-length content-range} \
        GET /16480bytes
    } -result {200 16480 {}}

test byteranges-2.8.4 {No range large headers} -constraints serverListen -setup {
    ns_register_proc GET /tclresp {
        ns_set put [ns_conn outputheaders] x [string repeat x 1050]
        ns_returnfile 200 text/plain [ns_pagepath 16480bytes]
    }
} -body {
    nstest::http -getheaders {content-type content-length} GET /tclresp
} -cleanup {
    ns_unregister_op GET /tclresp
} -result {200 text/plain 16480}


test byteranges-3.1 {syntactically invalid} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=3-2} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {200 10 {} 0123456789}

test byteranges-3.2 {syntactically invalid} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {200 10 {} 0123456789}

test byteranges-3.3 {syntactically invalid} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes 0-1} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {200 10 {} 0123456789}

test byteranges-3.4 {syntactically invalid} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range 0-1} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {200 10 {} 0123456789}

test byteranges-3.5 {syntactically invalid} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range =} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {200 10 {} 0123456789}

test byteranges-3.6 {syntactically invalid} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range =-} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {200 10 {} 0123456789}

test byteranges-3.7 {syntactically invalid} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=--6-9} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {200 10 {} 0123456789}

test byteranges-3.8 {syntactically invalid} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=1--6} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {200 10 {} 0123456789}

test byteranges-3.9 {syntactically invalid} -constraints serverListen -body {
    nstest::http -getbody 1 -setheaders {range bytes=1} \
        -getheaders {content-length content-range} \
        GET /10bytes
} -result {200 10 {} 0123456789}


test byteranges-4.1 {unsatisfiable} -constraints serverListen -body {
    nstest::http -setheaders {range bytes=10-10} -getheaders {content-range} \
        GET /10bytes
} -result {416 {bytes */10}}

test byteranges-4.2 {unsatisfiable} -constraints serverListen -body {
    nstest::http -setheaders {range bytes=10-} -getheaders {content-range} \
        GET /10bytes
} -result {416 {bytes */10}}

test byteranges-4.3 {unsatisfiable} -constraints serverListen -body {
    nstest::http -setheaders {range bytes=11-10} -getheaders {content-range} \
        GET /10bytes
} -result {416 {bytes */10}}


#
# "ns_writer submitfile" tests, returning partial results, but not
# providing header content-rage files + status-code 206... maybe they should.
#
test byteranges-5.1.1 {ns_writer reply} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        ns_writer submitfile [ns_server pagedir]/10bytes
    }} -body {
        nstest::http -getbody 1 -getheaders {content-length content-range} \
            GET /tclresp
    } -result {200 10 {} 0123456789}

test byteranges-5.1.2 {ns_writer range reply} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        ns_writer submitfile -offset 6 [ns_server pagedir]/10bytes
    }} -body {
        nstest::http -getbody 1 -getheaders {content-length content-range} \
            GET /tclresp
    } -result {200 4 {} 6789}

test byteranges-5.1.3 {ns_writer range reply} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        ns_writer submitfile -offset 0 -size 2 [ns_server pagedir]/10bytes
    }} -body {
        nstest::http -getbody 1 -getheaders {content-length content-range} \
            GET /tclresp
    } -result {200 2 {} 01}

test byteranges-5.1.4 {ns_writer range reply} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        ns_writer submitfile -size 3 [ns_server pagedir]/10bytes
    }} -body {
        nstest::http -getbody 1 -getheaders {content-length content-range} \
            GET /tclresp
    } -result {200 3 {} 012}

test byteranges-5.2.1 {ns_writer range reply - wrong offset} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        catch {ns_writer submitfile -offset -1 -size 2 [ns_server pagedir]/10bytes} errmsg
        ns_return 200 text/plain $errmsg
    }} -body {
        nstest::http -getbody 1 \
            GET /tclresp
    } -result {200 {expected integer in range [0,MAX] for '-offset', but got -1}}

test byteranges-5.2.2 {ns_writer range reply - wrong offset} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        catch {ns_writer submitfile -offset 11 -size 2 [ns_server pagedir]/10bytes} errmsg
        ns_return 200 text/plain $errmsg
    }} -body {
        nstest::http -getbody 1 \
            GET /tclresp
    } -result {200 {offset must be a positive value less or equal filesize}}

test byteranges-5.2.3 {ns_writer range reply - wrong size} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        catch {ns_writer submitfile -size 11 [ns_server pagedir]/10bytes} errmsg
        ns_return 200 text/plain $errmsg
    }} -body {
        nstest::http -getbody 1 \
            GET /tclresp
    } -result {200 {offset + size must be less or equal filesize}}

test byteranges-5.2.4 {ns_writer range reply - wrong size} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        catch {ns_writer submitfile -size -1 [ns_server pagedir]/10bytes} errmsg
        ns_return 200 text/plain $errmsg
    }} -body {
        nstest::http -getbody 1 \
            GET /tclresp
    } -result {200 {expected integer in range [1,MAX] for '-size', but got -1}}

test byteranges-5.2.5 {ns_writer range reply - wrong offset + size} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        catch {ns_writer submitfile -offset 4 -size 7 [ns_server pagedir]/10bytes} errmsg
        ns_return 200 text/plain $errmsg
    }} -body {
        nstest::http -getbody 1 \
            GET /tclresp
    } -result {200 {offset + size must be less or equal filesize}}

test byteranges-5.2.6 {ns_writer range reply - wrong file} \
    -constraints serverListen -setup { ns_register_proc GET /tclresp {
        catch {ns_writer submitfile -offset 4 -size 7 [ns_server pagedir]/11bytes} errmsg
        ns_return 200 text/plain $errmsg
    }} -body {
        nstest::http -getbody 1 \
            GET /tclresp
    } -match glob -result {200 {file does not exist*}}


#
# Range requests on ADP files are currently ignored
#
test byteranges-6.0 {ADP + byte range} \
    -constraints serverListen -setup {
        ns_register_adp GET /dejavu helloworld.adp
    } -body {
        nstest::http -getbody 1 -setheaders {range bytes 2-3} \
            GET /dejavu
    } -result {200 {Hello World!}}


test byteranges-7.0 {Many contiguous ranges} \
    -constraints {serverListen} -body {
        nstest::http -setheaders {range bytes=0-1,2-3,3-4} \
            -getheaders {content-length content-range} \
            GET /16480bytes
    } -result {206 5 {bytes 0-4/16480}}

test byteranges-7.1 {Many contiguous ranges} \
    -constraints {serverListen} -body {
        nstest::http -setheaders {range bytes=0-1,1-2,2-3} \
            -getheaders {content-length content-range} \
            GET /16480bytes
    } -result {206 4 {bytes 0-3/16480}}

test byteranges-7.2 {Many contiguous ranges} \
    -constraints {serverListen} -body {
        for {set i 0} {$i < 60} {incr i} {
            lappend ranges $i-$i
        }
        nstest::http -setheaders [list range bytes=[join $ranges ,]] \
            -getheaders {content-length content-range} \
            GET /16480bytes
    } -result {206 60 {bytes 0-59/16480}}

test byteranges-7.3 {Many non-contiguous ranges} \
    -constraints {serverListen} -body {
        set ranges {}
        for {set i 0} {$i < 32} {incr i} {
            set j [expr {$i*2}]
            lappend ranges $j-$j
        }

        nstest::http -setheaders [list range bytes=[join $ranges ,]] \
            -getbody 0 \
            -getheaders {content-length content-range} \
            GET /16480bytes
    } -result {206 2970 {}}

test byteranges-7.4 {Too Many non-contiguous ranges (more than NS_MAX_RANGES)} \
    -constraints {serverListen} -body {
        set ranges {}
        for {set i 0} {$i < 60} {incr i} {
            set j [expr {$i*2}]
            lappend ranges $j-$j
        }
        nstest::http -setheaders [list range bytes=[join $ranges ,]] \
            -getbody 0 \
            -getheaders {content-length content-range} \
            GET /16480bytes
    } -result {206 2970 {}}

#
# The question whether or not the fd is used internally depends on
# the configuration file. Make sure that caching is activated, and the
# cachemaxentry is larger than 2048.
#
test byteranges-7.5a {larger byte ranges, no fd, writer} -constraints serverListen \
    -setup {
        #ns_logctl severity Debug(task) on
    } -body {
        nstest::http -getbody 0 -setheaders {range bytes=0-100,200-300,400-1300,1600-1699} \
            -getheaders {content-length content-range content-type} \
            GET /2048bytes
    } -cleanup {
        #ns_logctl severity Debug(task) off
    } -result {206 1608 {} {multipart/byteranges; boundary=NaviServerNaviServerNaviServer}}

#
# The following test returns 4 bytes more than byteranges-7.5a, since
# the total lengths in the chunked headers is different as well.
#
test byteranges-7.5b {larger byte ranges, fd, writer} -constraints serverListen -body {
    nstest::http -getbody 0 -setheaders {range bytes=0-100,200-300,400-1300,1600-1699} \
        -getheaders {content-length content-range content-type} \
        GET /16480bytes
} -result {206 1612 {} {multipart/byteranges; boundary=NaviServerNaviServerNaviServer}}


cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
