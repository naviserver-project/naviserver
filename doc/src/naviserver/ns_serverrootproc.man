[include version_include.man]
[manpage_begin ns_serverrootproc n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Callback for Determining Server Root}]

[description]

 This command registers a Tcl callback that dynamically computes the
 server root directory. It is commonly used to determine the
 per-request "serverdir" based on attributes of the current connection
 (for example, using the [const Host:] header field).

[section {COMMANDS}]

[list_begin definitions]

[call [cmd ns_serverrootproc] [arg script] [opt [arg "arg ..."]]]

 Registers a [arg script] that returns the server root directory as an
 absolute or relative path.  The result of this callback overrides the
 default value of the [const serverdir] parameter. For more details,
 see [uri ../../manual/files/admin-config.html#section4 \
 "Customizing File Locations"].

[para]

 If additional arguments are provided, they will be passed to the
 callback. Thus, the callback can be specified as either a
 (multi-line) script or as a command with arguments. (Note: When
 the callback is registered via a configuration parameter, the
 multi-argument invocation style is not available.)

[list_end]

[section EXAMPLES]

 The [const serverrootproc] callback can be defined directly in the
 configuration file or registered via the [cmd ns_serverrootproc]
 command. Defining it in the configuration file has the advantage that
 it can be used (for example, for setting log file paths) before the
 server (here named "default") fully starts.

[example_begin]
 ns_section ns/server/default {
   ns_param serverdir /var/www
   ns_param serverrootproc {
     #
     # Compute the per-request "serverdir":
     #
     set rootDir [lb]ns_server serverdir[rb]
     set host [lb]ns_conn host ""[rb]
     if {$host ne "" && [lb]file isdirectory $rootDir/$host [rb]} {
       # Use the directory corresponding to the Host header.
       set serverDir $rootDir/$host
     } else {
       # Fall back to the default server directory.
       set serverDir $rootDir/[lb]ns_info server[rb]
       ns_log notice "... $rootDir/$host does not exist, use default '$serverDir'"
     }
     return $serverDir
   }
 }
[example_end]

 Alternatively, you can register the callback via
 [cmd ns_serverrootproc] within the Tcl initialization script of a
 server. This approach was standard in NaviServer 4.99 but is more
 complex since the callback must be registered after the server is
 initialized. One way to do this is by using the [term initcmd]
 parameter in the [term tcl] section of a server configuration:

[example_begin]
 ns_section ns/server/default/tcl {
   ns_param initcmds {
     #
     # Use the Tcl namespace "::default" for the "default" server.
     #
     namespace eval ::default {
       #
       # Define the callback procedure.
       #
       proc serverroot {args} {
         #
         # Compute the per-request "serverdir":
         #
         set rootDir [lb]ns_server serverdir[rb]
         set host [lb]ns_conn host ""[rb]
         if {$host ne "" && [lb]file isdirectory $rootDir/$host [rb]} {
           set serverDir $rootDir/$host
         } else {
           set serverDir $rootDir/[lb]ns_info server[rb]
           ns_log notice "... $rootDir/$host does not exist, use default '$serverDir'"
         }
         return $serverDir
       }
       #
       # Register the callback:
       #
       ns_serverrootproc [lb]namespace current[rb]::serverroot
     }
   }
 }
[example_end]


[see_also ns_locationproc ns_server ns_conn ns_set]
[keywords serverdir "global built-in" callback "virtual host"]
[manpage_end]



