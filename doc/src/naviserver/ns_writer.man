[include version_include.man]
[manpage_begin ns_writer n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Manage files with writer thread}]

[description]

This command allows one to submit data or file to be returned to the
client connection using writer thread instead of current connection
thread. Writer thread processes multiple sockets using async socket
operations which consumes less resources than returning multiple files
to the slow clients in separate thread.

[section {COMMANDS}]

[list_begin definitions]

[call [cmd "ns_writer list"] \
	[opt [option "-server [arg server]"] ]]

[para] 
Returns list of all currently submitted files. Every list entry
contains the following elements:

[list_begin enumerated]
[enum] start time of the initiating request,
[enum] name of the thread,
[enum] driver,
[enum] pool,
[enum] IP address of the client,
[enum] file descriptor,
[enum] remaining size,
[enum] bytes already sent,
[enum] current transfer rate
[enum] rate limit, and
[enum] the client data as provided via [lb]ns_conn clientdata[rb].
[list_end]

If [option {-server}] is specified, only the submitted file entries
from the specified server are returned. When NaviServer is running in
reverse proxy mode, the client IP address is taken form the value as
provided by the reverse proxy server.

[call [cmd "ns_writer submit"] [arg data]]

[para]
Submit arbitrary data to be returned via writer thread, data can be
binary. On success the function returns 1, otherwise 0.


[call [cmd "ns_writer submitfile"] \
	[opt [option -headers]] \
	[opt [option "-offset [arg memory-size]"]] \
	[opt [option "-size [arg memory-size]"]] \
	[arg filename]]

[para]
Submits file to be returned via writer thread. For partial requests,
ns_writer does NOT change status code or sets content-range. On
success the function returns 1, otherwise 0.
Optionally the following arguments can be used:

[para]
[option -headers]
Tells the writer to provide required HTTP headers, like content size,
type and status. When this option is not used, make sure that the
headers are provided (e.g. via [cmd ns_headers]) from your application.

[para]
[option -offset]
If specified, file will be returned starting with this offset.
The value can be specified in memory units (kB, MB, GB, KiB, MiB, GiB).

[para]
[option -size]
If not specified, the whole file will be returned, otherwise only given
part. Can be combined with [option -offset].
The value can be specified in memory units (kB, MB, GB, KiB, MiB, GiB).


[call [cmd "ns_writer submitfiles"] \
	[opt [option -headers]] \
	[arg filespecs]]

[para]
Submits multiple files to be submitted in a single chunk. This call is
quite similar to [cmd "ns_writer submitfile"], but it accepts a list of
dicts as argument. Every dict element has to contain a [term filename]
element and optionally an [term -offset] element and/or a [term -size]
element.

[para] This function is, e.g., useful for video streaming applications,
where multiple video file chunks should be transferred (sometimes)
concatenated in a single chunk. Therefore, this function avoids the
necessity to concatenate these files in advance (causing increased
latency and disk usage).


[example_begin]
 ns_writer submitfiles {{filename /tmp/f1} {filename /tmp/f2 -offset 10}}
[example_end]


[call [cmd "ns_writer size"] \
	[opt [option "-driver [arg value]"]] \
	[opt [arg size]]]

[para]
Query or set configuration parameter [term writersize] of the
writer(s) of the current or specified driver. When [option "-driver"]
is not specified the driver of the current connection thread is used.
When the [arg size] is not provided, the actual setting is returned.
When the [arg size] is provided, it can be specified in memory units
(kB, MB, GB, KiB, MiB, GiB).

[call [cmd "ns_writer streaming"] \
	[opt [option "-driver [arg value]"]] \
	[opt true|false]]

[para]
Query or set configuration parameter [term writerstreaming] of the
writer(s) of the current or specified driver.  When [option "-driver"]
is not specified the driver of the current connection thread is used.
When the value is specified, it has to be of the form of a valid
Boolean value.

[list_end]

[section CONFIGURATION]
      
[para]
[emph {Basic configuration options:}]
      
[example_begin]
 ns_section "ns/server/default/module/nssock" {
    ns_param writerthreads 1
    ns_param writersize 4kB
    ns_param writerstreaming true
 }
[example_end]

[para]
[term writerthreads] parameter specified how many writer
threads will be used, multiple threads will be rotated to spread the
load across all threads

[para]
[term writersize] specifies the minimal size of the file to be
considered for writer thread, this parameter is used by connection
thread when returning file and if size exceeds configured value, file
will be returned via writer thread and connection thread will be
released to handle other requests.

[para]
[term writerstreaming] specifies whether or not streaming HTML
output (e.g. sent via [cmd ns_write]) should be sent via the writer.
When sending server responses over slow connections, this option
reduces the blocking time of the connection threads and can therefore
reduce the damage of slow-read attacks.

[section EXAMPLES]

[example_begin]
 ns_writer submitfile /tmp/biglist.txt
[example_end]

[see_also ns_returnfile ns_conn ns_write ns_headers]
[keywords "server built-in" writer configuration "reverse proxy"]

[manpage_end]
