[include version_include.man]
[manpage_begin ns_adp_ctl n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {ADP control command}]
[description]

This command enables control of the current ADP execution environment.
Aside from the bufsize and chan subcommands,
they all return a boolean value for a given ADP option. If
the bool argument is given, the option is set to the
given value and the previous value is returned.


[section COMMANDS]

[list_begin definitions]

[call [cmd "ns_adp_ctl autoabort"] [opt [arg bool]]]

Query or set the autoabort option. When enabled, failure to flush a
buffer (normally the result of a closed HTTP connection)
generates an ADP exception, unwinding the ADP call stack.

[call [cmd "ns_adp_ctl bufsize"] [opt [arg size]]]

Return the currently
ADP output buffer size, setting it to a new value if the
optional [arg size] argument is specified.

[call [cmd "ns_adp_ctl cache"] [opt [arg bool]]]

Query or set the cache option. When disabled, all requests to cache
executed ADP blocks via the [cmd "ns_adp_include -cache"] directive
are ignored, resulting in normal execution of all code.

[call [cmd "ns_adp_ctl channel"] [opt [arg chan]]]

Query or specify an open file channel to receive output when the
buffer is flushed. If channel is the null string, the output channel
is cleared. This capability can be useful for specialized uses of ADP
outside the context of an HTTP connection, e.g., for debugging or
testing. Use an empty argument to reset the channel.

[call [cmd "ns_adp_ctl detailerror"] [opt [arg bool]]]

Query or set the detailerror option. When enabled, errors in ADP pages
are formatted with information about the context of the HTTP
request. This can be very helpful in debugging ADP errors
but potentially a security risk if the HTTP context (e.g.,
cookie headers) contains personal or sensitive data. Errors
are logged to the server log and, if [arg displayerror] is
enabled, appended to the output buffer.

[call [cmd "ns_adp_ctl displayerror"] [opt [arg bool]]]

Query or set the displayerror option. When enabled, errors in ADP
pages are formatted and appended to the output stream,
normally visible to a user's browser. This option
should generally be enabled in development and disabled in
production.


[call [cmd "ns_adp_ctl expire"] [opt [arg bool]]]

Query or set the expire option. When enabled, the ADP request
processing code adds an "Expires: now" header in the response buffer
to disable any caching. In practice, more thoughtful cache control
mechanisms should be used based on the HTTP/1.1 spec.

[call [cmd "ns_adp_ctl safe"] [opt [arg bool]]]

Query or set the safe option.
When enabled, all code is executed in [arg safe]  mode,
disabling and ignoring any code within registered
tags.

[call [cmd "ns_adp_ctl singlescript"] [opt [arg bool]]]

Query or set the singlescript option. When enabled, ADP pages are
converted from independent text-script blocks into a single
script, which text blocks replaced with a call to
ns_adp_append with the given text. Functionally the
output is the same however an error anywhere on the page
will result in the entire ADP page returning instead of
skipping to the next block which is the normal behavior. In
practice, singlescript is useful in development while
in production leaving it disabled provides a more defensive
execution environment where minor errors in one ADP do not
inhibit execution of the overall page.

[call [cmd "ns_adp_ctl stream"] [opt [arg bool]]]

Query or set the streaming option.
When enabled, partial adp-outputs are returned to the user as soon as
possible via chunked encoding.

[call [cmd "ns_adp_ctl stricterror"] [opt [arg bool]]]

Query or set the stricterror option. When enabled, the result is
similar to that of singlescript in that an error in a
particular block will return the entire page instead of
continuing to the next text or script block.

[call [cmd "ns_adp_ctl trace"] [opt [arg bool]]]

Query or set the [arg trace] option which currently does nothing.

[call [cmd "ns_adp_ctl trimspace"] [opt [arg bool]]]

Query or set the trimspace option. When enabled, any white space at
the start of the output buffer is eliminated. White space
can show up in the output as a result of ADP pages which do
nothing but include other ADPs in a way to reuse code
with the unfortunate side effect of the training newline at
the end of a
[example_begin]
 <% ns_adp_include myfile.adp %>
[example_end]
ending up in the output stream.


[list_end]

[see_also ns_conn \
	ns_adp ns_adp_mimetype  ns_adp_abort ns_adp_break ns_adp_close \
	ns_adp_ctl ns_adp_dump ns_adp_include \
	ns_adp_flush ns_adp_return ns_adp_stream]
[keywords "server built-in" ADP]
[manpage_end]
