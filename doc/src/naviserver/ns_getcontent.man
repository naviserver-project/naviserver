[include version_include.man]
[manpage_begin ns_getcontent n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Return the message body of a received request}]

[description]

This command returns the content of a request as file or as string, no matter,
whether it was spooled during upload into a file or not. The user
can specify, whether the result should treated as binary or not.
the default is "-as_file true", since this will not run into
memory problems on huge files.


[section COMMANDs]

[list_begin definitions]

[call [cmd ns_getcontent] \
     [opt "[option -as_file] [arg bool]"] \
     [opt "[option -binary] [arg bool]"]]

Returns as result the filename of the temporary file (when spooled to
a file, default) or the content of the file (when [option -as_file] is false).

When [option -binary] is true (default) the result is returned
literally, otherwise the content is translated to the active charset.

[para]
Typically this command is used on POST, PUT, PROPFIND or similar requests.

[list_end]

[section EXAMPLES]

The following script checks, whether the received request was a POST
or POST requests, it checks the provided content type, and in case it
was a JSON type, it retrieves the payload of the request and converts
it to a Tcl dict. Note that the json package form tcllib has some
restrictions. There are several alternative JSON parsers available for
Tcl.

[example_begin]
 if {[lb]ns_conn method[rb] in {PUT POST}
    && [lb]ns_set iget [lb]ns_conn headers[rb] Content-Type] eq "application/json"
 } {
    package req json
 
    set dict [lb]json::json2dict [lb]ns_getcontent -as_file false -binary false[rb][rb]
    ns_return 200 text/plain $dict\n
 
 } else {
    ad_return_complaint 1 "unsupported HTTP method: [lb]ns_conn method[rb]"
 }
[example_end]

When the script above is saved in the page directory under the name
json_receiver.tcl, and the server is running under port 8100 on
localhost, the example above can be tested e.g. with the following
command from the shell.

[example_begin]
 curl --header "Content-Type: application/json" --request POST --data '{
   "username":"xyz","password":"xyz"
 }' http://localhost:8100/json-receiver.tcl
[example_end]



[keywords form]
[see_also ns_getform ns_conn ns_return]

[manpage_end]

