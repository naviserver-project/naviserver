[include version_include.man]
[manpage_begin ns_sema n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Operate on semaphore-like objects}]

[description]

This command provides a mechanism to manipulate semaphore-like objects
but are not inter-process capable like true semaphores.  They are actually
implemented with a mutex and a counter.  The allowed options (which may be abbreviated) are:


[section {COMMANDS}]

[list_begin definitions]

[call [cmd  "ns_sema create"] [opt [arg count]]]

Initializes a new semaphore whose count is initialized to zero by default
or [arg count] otherwise.  Returns a handle to the semaphore object.

[call [cmd  "ns_sema destroy"] [arg handle]]

Destroys the semaphore [arg handle] and frees any resources it was
using. Actually, in the current implementation, this operation is a
no-op, the semaphore will live until the server shuts down.



[call [cmd  "ns_sema release"] [arg handle] [opt [arg count]]]

Releases the semaphore [arg handle] by incrementing the counter by one by default
or by [arg count] otherwise.  The thread will wake any threads blocking on this
semaphore when [arg count] is equal to one.

[para] This is what is commonly referred to as "semaphore up".

[call [cmd  "ns_sema wait"] [arg handle]]

Waits for a semaphore [arg handle] to be greater than zero.  Will block the thread until
this is true.  Decrements the counter by one when the counter is greater than zero.

[para] This is what is commonly referred to as "semaphore down".

[list_end]

[section EXAMPLES]

[example_begin]
 # need an example here
[example_end]


[see_also nsd]
[keywords "server built-in" ns_cond ns_critsec ns_event ns_mutex ns_thread]

[manpage_end]

