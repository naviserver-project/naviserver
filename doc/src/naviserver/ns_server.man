[include version_include.man]
[manpage_begin ns_server n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Get state of the server's connection pools and queues}]

[description]

This command provides a way to examine the current server's
connection pools and queues.  The allowed options (which may be abbreviated) are:

[section {COMMANDS}]

[list_begin definitions]

[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[cmd filters]]

Returns a list of the currently defined filters.


[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[cmd pagedir]]

Returns the path of the virtual server's page directory root.


[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[cmd pools]]

Returns a list of the pools defined for this server.

[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[cmd requestprocs]]

Returns a list of the currently defined requestprocs  (the registered
procs for certain request patterns).


[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[cmd serverdir]]

Returns the path of the virtual server's base directory.


[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[cmd tcllib]]

Returns the path of the virtual server's private Tcl library.


[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[cmd traces]]

Returns a list of the currently defined traces.

[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[cmd url2file]]

Returns a list of the mappings from URLs to files.


[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd active] \
	[opt [option "-checkforproxy"]] \
	]
[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd all] \
	[opt [option "-checkforproxy"]] \
	]
[call [cmd ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd queued] \
	]

These three commands return information about queued or running
requests. For every request the command returns a list containing
connection id, the peer address, state ("running" or "queued"), the
request (HTTP method and url), running time, and bytes sent. The
sub-command [arg all] returns the union of the running and queued
requests.

[para] When option [option -checkforproxy] is given, it tries to
return the peer address from "X-Forwarded-For" header field. If this
is not possible (not given, or empty, or having the value "unknown") it falls
back to the physical peer address.

[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd connections]]

Returns the number of connection requests processed by this pool since
startup. 


[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd map] \
	[opt [option "-noinherit"]] \
	[opt [arg "mapspec"]] \
	]

When the optional mapping specification (argument [arg mapspec]) is
provided add this mapping to the server and pool (as specified or
default). As a consequence matching requests (based on HTTP method and
path) will be mapped to this connection pool.

[para] When the optional argument [arg mapspec] is not provided, the
command returns a list of mappings for the (given or default) server
and pool.


[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[cmd mapped] \
	[opt [option "-exact"]] \
	[opt [option "-noinherit"]] \
	[arg "mapspec"] \
	]

Return the connection pool associated with the mapping specification
(HTTP method and path).  When the option [option -exact] is used, the
inheritance is deactivated, and only the values are returned directly
assigned to the URL. When the option [option -noinherit] is specified,
only values set with the [option -noinherit] flag are returned. For
requests handled by the default connection pool, empty is returned.


[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd maxthreads] \
	[opt [arg value]]]

Query or set the maximum number of connection threads for this server
and pool. The value must be large than [arg minthreads] and less than
the maximum number of connections.


[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd minthreads] \
	[opt [arg value]]]

Query or set the minimum number of connection threads for this server
and pool. The value must be between 1 and [arg maxthreads].


[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd connectionratelimit] \
	[opt [arg value]]]

Query or set the maximum transmission rate per connection when data is sent via
writer threads. The value is provided as KB/s. 0 means no rate limit.

[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd poolratelimit] \
	[opt [arg value]]]

Query or set the maximum transmission rate for the pool when data is sent via
writer threads. The value is provided as KB/s. 0 means no rate
limit. When the pool rate limit is set, all connections in this pool
are managed.



[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd stats]]

Returns a list of attribute value pairs containing statistics for the
server and pool, containing the number of requests, queued requests,
dropped requests (queue overruns), cumulative times,
and the number of started threads.

[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd threads]]

Returns a list of attribute value pairs containing information about the
number of connection threads for the server and pool.

[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd unmap] \
	[opt [option "-noinherit"]] \
	[arg "mapspec"] \
	]

Undo the effect of a [cmd "ns_server map"] operation.  As a
consequence formerly mapped requests will be served by the default
connection pool.

[para] Limitation: when the mapspec contains a context filter (see
below) this is ignored, all entries with the specified HTTP method and
path are unmapped.

[call [cmd  ns_server] \
	[opt [option "-server [arg s]"]] \
	[opt [option "-pool [arg p]"]] \
	[cmd waiting]]

Returns the number of connections waiting (i.e. queued) to be processed.

[list_end]

[section OPTIONS]
[list_begin options]

[opt_def -server [arg s]]
Specifies the (virtual) server to be queried. If this option is not
specified, the current server is used as a source.

[opt_def -pool [arg p]]
Specifies the pool to be queried. If this option is not
specified, the default pool of the server is used as a source.

[opt_def -noinherit ""] Optional flag for the connection pool
mappings. When used, the specified path will be used literally, i.e.,
only exactly this path, but no sub-paths are mapped.

[opt_def mapspec ""]
A list of two or three arguments, containing an HTTP method, a path
and optionally a context filter.

Example:
[example_begin]
 GET /*.tcl
[example_end]

When the [term mapspec] is used as three element list, the last
argument is the context filter, containing a request header-field and
a value for matching.  The pseudo request header-field "X-NS-ip" is
used for mapping requests from a certain IP address of from an IP
range (in CIDR notation). In reverse proxy mode, the client IP address
is taken form the value as provided by the reverse proxy server.

[para]
Examples:

[example_begin]
 ns_server -pool bots map "GET /* {user-agent *bot*}"
 ns_server -pool bots map "GET /* {user-agent *crawl*}"
 ns_server -pool bots map "GET /* {user-agent *baidu*}"
 ns_server -pool bots map "GET /* {X-NS-ip 2a03:2880::/29}"
 
 ns_server -pool local map "GET /* {X-NS-ip 127.0.0.1}"
 ns_server -pool local map "GET /* {X-NS-ip 137.208.1.0/16}"
[example_end]
[list_end]

[section EXAMPLES]

The following example shows, how dynamic connection pool mapping can
be implemented based on the "partialtimes" of a request: When a
request is taking longer than a certain threshold, the combination of
HTTP method and request path (the [arg mapspec]) is mapped dynamically
to a pool named "slow". As a consequence later requests with the same
HTTP method and path will be served from this connection pool.

[example_begin]
 ns_register_trace GET /* {
    set pt [lb]ns_conn partialtimes[rb]
    set req [lb]list [lb]ns_conn method[rb] [lb]ns_conn url[rb][rb]
    set ctime [lb]expr {[lb]dict get $pt runtime[rb] + [lb]dict get $pt filtertime[rb]}[rb]
    if {$ctime > 3.0 && [lb]ns_server mapped $req[rb] eq ""} {
       ns_server -pool slow map -noinherit $req
    }
 }
[example_end]

The connection thread pools can be defined as usual in the config
file:
[example_begin]
 ns_section "ns/server/${server}/pools" {
    ns_param fast "Fast lane pool"
    ns_param slow "Slow lane pool"
    ns_param bots "Bot pool"
 }
 
 ns_section "ns/server/${server}/pool/fast" {
    ns_param minthreads 4
    ns_param maxthreads 4
    ns_param rejectoverrun true

    ns_param map "GET /*.png"
    ns_param map "GET /*.jpg"
    ns_param map "GET /*.pdf"
 }
 
 ns_section "ns/server/${server}/pool/slow" {
    ns_param minthreads 5
    ns_param maxthreads 15
    ns_param maxconnections 200
    ns_param rejectoverrun true
 }

ns_section "ns/server/${server}/pool/bots" {
    ns_param   map "GET  /* {user-agent *bot*}"
    ns_param   map "GET  /* {user-agent *rawl*}"
    ns_param   map "GET  /* {user-agent *pider*}"
    ns_param   map "GET  /* {user-agent *baidu*}"
    ns_param   minthreads 2
    ns_param   maxthreads 2
    ns_param   rejectoverrun true
    ns_param   poolratelimit 1000    ;# 0; limit rate for pool to this amount (KB/s); 0 means unlimited
}
[example_end]

You might query a certain mapping at runtime:

[example_begin]
 % ns_server mapped "GET /images/logo.png"
 fast
[example_end]

Mapping with context constraints can also be
provided in the configuration file. We extend the example above by
adding a bot pool.

[example_begin]
 ns_section "ns/server/${server}/pools" {
    ns_param fast "Fast lane pool"
    ns_param slow "Slow lane pool"
    ns_param bots "Bot pool"
 }
 #
 # ...
 #
 ns_section "ns/server/${server}/pool/bots" {
    ns_param map "GET  /* {user-agent *bot*}"
    ns_param map "GET  /* {user-agent *rawl*}"
    ns_param map "GET  /* {user-agent *pider*}"
    ns_param map "GET  /* {user-agent *baidu*}"
    ns_param minthreads 2
    ns_param maxthreads 2
    ns_param rejectoverrun true
    ns_param poolratelimit 1000    ;# limit rate for pool to this amount (KB/s)
}
[example_end]

[see_also ns_conn ns_register]
[keywords \
	"server built-in" configuration "connection thread pools" \
	pools pagedir tuning reverseproxy]

[manpage_end]
